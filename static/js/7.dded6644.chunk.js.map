{"version":3,"sources":["constants/actionTypes/index.js","redux/holiday/actions.js","redux/weather/actions.js","redux/taipeiSpeedCameraPositions/actions.js","components/MuiModal.js","pages/taipeiSpeedCameraPositions/useTaipeiSpeedCameraPositions.js","components/MuiTextField.js","constants/googleMapsApiKey.js","pages/taipeiSpeedCameraPositions/GoogleMaps.js","pages/taipeiSpeedCameraPositions/MessageModal.js","pages/taipeiSpeedCameraPositions/index.js"],"names":["GET_HOLIDAY","GET_HOLIDAY_SUCCESS","GET_HOLIDAY_FAILURE","RESET_HOLIDAY","GET_WEATHER","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","RESET_WEATHER","GET_TAIPEI_SPEED_CAMERA_POSITIONS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE","RESET_TAIPEI_SPEED_CAMERA_POSITIONS","getHoliday","payload","type","getHolidaySuccess","getHolidayFailure","getWeather","getWeatherSuccess","getWeatherFailure","resettWeather","getTaipeiSpeedCameraPositions","getTaipeiSpeedCameraPositionsSuccess","getTaipeiSpeedCameraPositionsFailure","resettTaipeiSpeedCameraPositions","StyledModalContainer","styled","div","theme","secondBackground","MuiModal","open","handaleClose","children","onClose","useTaipeiSpeedCameraPositions","dispatch","useDispatch","taipeiSpeedCameraPositions","useSelector","state","taipeiSpeedCameraPositionsError","taipeiSpeedCameraPositionsLoading","getTaipeiSpeedCameraPositionsApi","axios","get","then","console","log","fakeMapsInformation","catch","err","getFakeTaipeiSpeedCameraPositions","a","latitudeAndLongitudeList","StyledTextField","TextField","MuiTextField","id","label","value","onChange","fullWidth","variant","defaultProps","undefined","GOOGLE_MAPS_API_KEY","process","REACT_APP_GOOGLE_MAPS_API_KEY","StyledMapLoadError","error","StyledMapContainer","StyledListContainer","StyledPaper","Paper","StyledLocationOnIcon","LocationOnIcon","StyledList","List","StyledListItem","ListItem","$isSelected","$isNoMarker","highlight","mainText","hover","StyledListItemTextSecondary","span","withTheme","googleMapRef","useRef","cameraListRef","millisecond","Date","now","toString","slice","randomCharacter","alphabet","Math","floor","random","length","join","getRandomCharacter","mapId","useState","mapElementID","google","setGoogle","loadGoogleError","setLoadGoogleError","gMap","setGMap","infoWindow","setInfoWindow","createdMarkers","setCreatedMarkers","selectedCameraNo","setSelectedCameraNo","filterCameraList","setFilterCameraList","cameraItems","setCameraItems","useEffect","Loader","apiKey","version","load","res","newMap","maps","Map","current","center","lat","lng","zoom","mapTypeControl","styles","googleMapsStyleTheme","themeName","newInfoWindow","InfoWindow","content","disableAutoPan","markers","forEach","item","errorMessage","marker","Marker","position","location","map","addListener","infoWindowContent","features","speedLimit","address","setContent","no","message","setOptions","Object","keys","items","alignItems","ListItemIcon","ListItemText","primary","secondary","Divider","component","mark","setMap","cameraElement","document","querySelector","element","container","getBoundingClientRect","bottom","height","top","containerRect","isElementVisible","elementTop","containerTop","scrollTop","setContainerScrollY","role","dense","button","onClick","data","setCenter","handlePositionListClick","Box","display","justifyContent","Grid","xs","sm","ref","event","close","target","reg","RegExp","filtedList","filter","test","StyledMessageContent","StyledIcon","StyledNote","p","MessageModal","fontSize","href","index","messageModalIsOpen","setMessageModalIsOpen","className"],"mappings":"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","file":"static/js/7.dded6644.chunk.js","sourcesContent":["// === holiday ===\nexport const GET_HOLIDAY = 'GET_HOLIDAY';\nexport const GET_HOLIDAY_SUCCESS = 'GET_HOLIDAY_SUCCESS';\nexport const GET_HOLIDAY_FAILURE = 'GET_HOLIDAY_FAILURE';\nexport const RESET_HOLIDAY = 'RESET_HOLIDAY';\n\n// === weather ===\nexport const GET_WEATHER = 'GET_WEATHER';\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILURE = 'GET_WEATHER_FAILURE';\nexport const RESET_WEATHER = 'RESET_WEATHER';\n\n// === taipei speed camera position ===\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS';\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS';\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE';\nexport const RESET_TAIPEI_SPEED_CAMERA_POSITIONS = 'RESET_TAIPEI_SPEED_CAMERA_POSITIONS';\n","import {\n    GET_HOLIDAY,\n    GET_HOLIDAY_SUCCESS,\n    GET_HOLIDAY_FAILURE,\n    RESET_HOLIDAY,\n} from '../../constants/actionTypes';\n\nexport const getHoliday = (payload) => ({\n    type: GET_HOLIDAY,\n    payload,\n});\n\nexport const getHolidaySuccess = (payload) => ({\n    type: GET_HOLIDAY_SUCCESS,\n    payload,\n});\n\nexport const getHolidayFailure = (payload) => ({\n    type: GET_HOLIDAY_FAILURE,\n    payload,\n});\n\nexport const resetHoliday = (payload) => ({\n    type: RESET_HOLIDAY,\n    payload,\n});","import {\n    GET_WEATHER,\n    GET_WEATHER_SUCCESS,\n    GET_WEATHER_FAILURE,\n    RESET_WEATHER,\n} from '../../constants/actionTypes';\n\nexport const getWeather = (payload) => ({\n    type: GET_WEATHER,\n    payload,\n});\n\nexport const getWeatherSuccess = (payload) => ({\n    type: GET_WEATHER_SUCCESS,\n    payload,\n});\n\nexport const getWeatherFailure = (payload) => ({\n    type: GET_WEATHER_FAILURE,\n    payload,\n});\n\nexport const resettWeather = (payload) => ({\n    type: RESET_WEATHER,\n    payload,\n});","import {\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\n    RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\n} from '../../constants/actionTypes';\n\nexport const getTaipeiSpeedCameraPositions = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    payload,\n});\n\nexport const getTaipeiSpeedCameraPositionsSuccess = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\n    payload,\n});\n\nexport const getTaipeiSpeedCameraPositionsFailure = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\n    payload,\n});\n\nexport const resettTaipeiSpeedCameraPositions = (payload) => ({\n    type: RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    payload,\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Modal from '@material-ui/core/Modal';\n\nconst StyledModalContainer = styled.div`\n  position: absolute;\n  width: 90%;\n  @media (min-width: 600px) {\n    width: 50%;\n  }\n  text-align: center;\n  background-color: ${({ theme }) => theme.secondBackground};\n  padding: 2rem 1rem;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst MuiModal = ({ open, handaleClose, children }) => {\n  return (\n    <Modal open={open} onClose={handaleClose}>\n      <StyledModalContainer>{children}</StyledModalContainer>\n    </Modal>\n  );\n};\n\nMuiModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handaleClose: PropTypes.func.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default MuiModal;\n","import { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport {\n    getTaipeiSpeedCameraPositions,\n    getTaipeiSpeedCameraPositionsSuccess,\n    getTaipeiSpeedCameraPositionsFailure,\n} from '../../redux/actions';\n// import taipeiSpeedCameraPositionsFakeData from './devFakeData.json'\nimport fakeMapsInformation from './fakeMapsInformation.json';\n\n// import { GOOGLE_MAPS_API_KEY } from '../../constants/googleMapsApiKey'\n// // 用太多要繳費給 Google，先註解掉\n// const googleMapsClient = require('@google/maps').createClient({\n//     key: GOOGLE_MAPS_API_KEY,\n//     Promise: Promise\n// })\n\nconst useTaipeiSpeedCameraPositions = () => {\n    const dispatch = useDispatch();\n\n    const taipeiSpeedCameraPositions = useSelector((state) => state.taipeiSpeedCameraPositions.taipeiSpeedCameraPositions);\n    const taipeiSpeedCameraPositionsError = useSelector((state) => state.taipeiSpeedCameraPositions.taipeiSpeedCameraPositionsError);\n    const taipeiSpeedCameraPositionsLoading = useSelector((state) => state.taipeiSpeedCameraPositions.taipeiSpeedCameraPositionsLoading);\n\n    // // 用太多要繳費給 Google，先註解掉\n    // const getLatitudeAndLongitude = (address) => (\n    //     googleMapsClient.geocode({ address })\n    //         .asPromise()\n    //         .then((response) => {\n    //             return ({\n    //                 formatted_address: response.json.results[0].formatted_address,\n    //                 location: response.json.results[0].geometry.location,\n    //             })\n    //         })\n    //         .catch((err) => {\n    //             return { errorMessage: err.message }\n    //         })\n    // )\n\n    // // 用太多要繳費給 Google，先註解掉\n    // const creatMapsInformation = async (taipeiSpeedCameraPositionsData) => (\n    //     await Promise.all(taipeiSpeedCameraPositionsData.map(async (item) => {\n    //         const { setRoad,\n    //             setPosition,\n    //         } = item\n    //         const address = `臺北市 ${setRoad} ${setPosition}`\n    //         const latitudeAndLongitude = await getLatitudeAndLongitude(address)\n    //         return {\n    //             ...item,\n    //             address,\n    //             ...latitudeAndLongitude,\n    //         }\n    //     }))\n    // )\n\n    const getTaipeiSpeedCameraPositionsApi = () => {\n        dispatch(getTaipeiSpeedCameraPositions());\n\n        axios.get('https://data.taipei/api/getDatasetInfo/downloadResource?id=745b8808-061f-4f5b-9a62-da1590c049a9&rid=5012e8ba-5ace-4821-8482-ee07c147fd0a')\n            .then(() => {\n                // 因為 api 不支援跨網域\n                // 且來源只提供 csv 檔，還要轉乘 json\n                // 永遠跑不到這裡\n                // 用太多要繳費給 Google，先註解掉\n                // const latitudeAndLongitudeList = await creatMapsInformation(taipeiSpeedCameraPositionsFakeData)\n                // dispatch(getTaipeiSpeedCameraPositionsSuccess(latitudeAndLongitudeList))\n\n                // 萬一成功也先用假資料\n                console.log('竟然打成功了!?');\n                dispatch(getTaipeiSpeedCameraPositionsSuccess(fakeMapsInformation));\n            })\n            .catch((err) => {\n                dispatch(getTaipeiSpeedCameraPositionsFailure(err));\n            });\n    };\n\n    const getFakeTaipeiSpeedCameraPositions = async () => {\n        // // 用太多要繳費給 Google，先註解掉\n        // const latitudeAndLongitudeList = await creatMapsInformation(taipeiSpeedCameraPositionsFakeData)\n\n        // creatMapsInformation 產生的資料\n        const latitudeAndLongitudeList = fakeMapsInformation;\n\n        dispatch(getTaipeiSpeedCameraPositionsSuccess(latitudeAndLongitudeList));\n    };\n\n    return {\n        taipeiSpeedCameraPositions,\n        taipeiSpeedCameraPositionsError,\n        taipeiSpeedCameraPositionsLoading,\n        // getLatitudeAndLongitude,\n        // creatMapsInformation,\n        getTaipeiSpeedCameraPositionsApi,\n        getFakeTaipeiSpeedCameraPositions,\n    };\n};\n\nexport default useTaipeiSpeedCameraPositions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst StyledTextField = styled(TextField)``;\n\nconst MuiTextField = ({ id, label, value, onChange, fullWidth, variant }) => {\n  return (\n    <StyledTextField\n      id={id}\n      label={label}\n      value={value}\n      onChange={onChange}\n      fullWidth={fullWidth}\n      variant={variant}\n    />\n  );\n};\n\nMuiTextField.defaultProps = {\n  id: undefined,\n  label: undefined,\n  value: undefined,\n  onChange: null,\n  fullWidth: false,\n  variant: 'outlined',\n};\nMuiTextField.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  variant: PropTypes.string,\n};\n\nexport default MuiTextField;\n","export const GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;","import React, { useEffect, useState, Fragment, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport { Loader } from '@googlemaps/js-api-loader';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport Box from '@material-ui/core/Box';\n\nimport { MuiLoadingPage } from '../../components/muiCircularProgress';\nimport MuiTextField from '../../components/MuiTextField';\nimport { GOOGLE_MAPS_API_KEY } from '../../constants/googleMapsApiKey';\n\nimport useTaipeiSpeedCameraPositions from './useTaipeiSpeedCameraPositions';\n// google map style 產生器 https://mapstyle.withgoogle.com/\nimport googleMapsStyleTheme from './googleMapsStyleTheme.json';\n\nconst StyledMapLoadError = styled.div`\npadding: 2rem;\ncolor: ${({ theme }) => theme.error}};\n`;\n\nconst StyledMapContainer = styled.div`\n  wdth: 100%;\n  height: 50vh;\n  position: relative;\n\n  @media (min-width: 600px) {\n    height: 80vh;\n  }\n`;\nconst StyledListContainer = styled.div`\n  height: 30vh;\n  overflow-y: hidden;\n\n  @media (min-width: 600px) {\n    height: 80vh;\n  }\n`;\n\nconst StyledPaper = styled(Paper)`\n`;\n\nconst StyledLocationOnIcon = styled(LocationOnIcon)`\n  width: 39px !important;\n  height: 39px !important;\n`;\n\nconst StyledList = styled(List)`\n  height: calc(100% - 80px);\n  overflow: auto;\n`;\n\nconst StyledListItem = styled(ListItem)`\n  color: ${({ theme, $isSelected, $isNoMarker }) => {\n    if ($isSelected) return theme.highlight;\n    else if ($isNoMarker) return theme.error;\n    return theme.mainText;\n  }} !important;\n  background-color: ${({ theme, $isSelected }) =>\n    $isSelected ? theme.hover : ''} !important;\n\n  .MuiListItemIcon-root .MuiSvgIcon-root,\n  .MuiTypography-colorTextSecondary {\n    color: ${({ theme, $isSelected, $isNoMarker }) => {\n      if ($isSelected) return theme.highlight;\n      else if ($isNoMarker) return theme.error;\n      return theme.mainText;\n    }} !important;\n  }\n`;\n\nconst StyledListItemTextSecondary = styled.span`\n  display: block;\n`;\n\nconst getRandomCharacter = () => {\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  return [\n    alphabet[Math.floor(Math.random() * alphabet.length)],\n    alphabet[Math.floor(Math.random() * alphabet.length)],\n    alphabet[Math.floor(Math.random() * alphabet.length)],\n  ].join('');\n};\n\nconst GoogleMaps = ({ theme }) => {\n  const { taipeiSpeedCameraPositions } = useTaipeiSpeedCameraPositions();\n  const googleMapRef = useRef();\n  const cameraListRef = useRef();\n\n  const millisecond = Date.now().toString().slice(-3);\n  const randomCharacter = getRandomCharacter();\n  const mapId = `map-${randomCharacter + millisecond}`;\n  const [mapElementID] = useState(mapId);\n\n  const [google, setGoogle] = useState(undefined);\n  const [loadGoogleError, setLoadGoogleError] = useState(undefined);\n  const [gMap, setGMap] = useState(undefined);\n  const [infoWindow, setInfoWindow] = useState(undefined);\n  const [createdMarkers, setCreatedMarkers] = useState({});\n  const [selectedCameraNo, setSelectedCameraNo] = useState('');\n  const [filterCameraList, setFilterCameraList] = useState(\n    taipeiSpeedCameraPositions\n  );\n  const [cameraItems, setCameraItems] = useState(null);\n\n  const handleSearchFieldChange = (event) => {\n    setSelectedCameraNo('');\n    infoWindow.close();\n    taipeiSpeedCameraPositions.forEach((item) => {\n      if (item.errorMessage) {\n        return;\n      }\n      createdMarkers[item.no].setMap(null);\n    });\n\n    if (event.target.value) {\n      const reg = new RegExp(event.target.value, 'g');\n      const filtedList = taipeiSpeedCameraPositions.filter(\n        (item) =>\n          reg.test(item.address) ||\n          reg.test(`限速 ${item.speedLimit}`) ||\n          reg.test(item.features)\n      );\n      setFilterCameraList(filtedList);\n    } else {\n      setFilterCameraList(taipeiSpeedCameraPositions);\n    }\n  };\n\n  const handlePositionListClick = (data) => {\n    gMap.setCenter(data.location);\n\n    const infoWindowContent = `\n            <div style=\"color: #ea4335;\">\n                <div>${data.features} - 限速 ${data.speedLimit}<div>\n                    <div>${data.address}</div>\n                </div>\n                    `;\n    infoWindow.setContent(infoWindowContent);\n    infoWindow.open(gMap, createdMarkers[data.no]);\n\n    setSelectedCameraNo(data.no);\n  };\n\n  useEffect(() => {\n    const loader = new Loader({\n      apiKey: GOOGLE_MAPS_API_KEY,\n      version: 'weekly',\n    });\n\n    loader\n      .load()\n      .then((res) => {\n        setGoogle(res);\n\n        const newMap = new res.maps.Map(googleMapRef.current, {\n          center: { lat: 25.047802296330403, lng: 121.5177953369906 },\n          zoom: 12,\n          mapTypeControl: false,\n          styles: googleMapsStyleTheme[theme.themeName],\n        });\n        setGMap(newMap);\n\n        const newInfoWindow = new res.maps.InfoWindow({\n          content: '',\n          disableAutoPan: true,\n        });\n        setInfoWindow(newInfoWindow);\n\n        let markers = {};\n        taipeiSpeedCameraPositions.forEach((item) => {\n          if (item.errorMessage) {\n            return;\n          }\n\n          const marker = new res.maps.Marker({\n            position: item.location,\n            map: null,\n          });\n          marker.addListener('click', () => {\n            const infoWindowContent = `\n                    <div style=\"color: #ea4335;\">\n                        <div>${item.features} - 限速 ${item.speedLimit}<div>\n                        <div>${item.address}</div>\n                    </div>\n                    `;\n            newInfoWindow.setContent(infoWindowContent);\n            newInfoWindow.open(gMap, marker);\n\n            setSelectedCameraNo(item.no);\n          });\n          markers[item.no] = marker;\n        });\n        setCreatedMarkers(markers);\n      })\n      .catch((err) => {\n        console.log('err.message', err.message);\n        setLoadGoogleError(err.message);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (gMap) {\n      gMap.setOptions({\n        styles: googleMapsStyleTheme[theme.themeName],\n      });\n    }\n  }, [theme.themeName]);\n\n  const isElementVisible = (element, container) => {\n    const { bottom, height, top } = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n\n    return top <= containerRect.top\n      ? containerRect.top - top <= height\n      : bottom - containerRect.bottom <= height;\n  };\n\n  const setContainerScrollY = (element, container) => {\n    const { top: elementTop } = element.getBoundingClientRect();\n    const { top: containerTop } = container.getBoundingClientRect();\n    container.scrollTop += elementTop - containerTop;\n  };\n\n  useEffect(() => {\n    if (gMap && Object.keys(createdMarkers).length > 0) {\n      const items = filterCameraList.map((item) => {\n        if (item.errorMessage) {\n          return (\n            <Fragment key={`${item.no}`}>\n              <StyledListItem\n                alignItems=\"flex-start\"\n                $isSelected={false}\n                $isNoMarker\n              >\n                <ListItemIcon>\n                  <StyledLocationOnIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={`${item.features} - 限速 ${item.speedLimit}`}\n                  secondary={\n                    <>\n                      <StyledListItemTextSecondary>\n                        {item.address}\n                      </StyledListItemTextSecondary>\n                      <StyledListItemTextSecondary>\n                        經緯度轉換失敗，無法產生地標\n                      </StyledListItemTextSecondary>\n                    </>\n                  }\n                />\n              </StyledListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </Fragment>\n          );\n        }\n\n        const mark = createdMarkers[item.no];\n        mark.setMap(gMap);\n        mark.addListener('click', () => {\n          const cameraElement = document.querySelector(`#camera-${item.no}`);\n          if (\n            isElementVisible(cameraElement, cameraListRef.current) === false\n          ) {\n            setContainerScrollY(cameraElement, cameraListRef.current);\n          }\n        });\n\n        return (\n          <Fragment key={`${item.no}`}>\n            <StyledListItem\n              alignItems=\"flex-start\"\n              role={undefined}\n              dense\n              button\n              onClick={() => handlePositionListClick(item)}\n              $isSelected={selectedCameraNo === item.no}\n              id={`camera-${item.no}`}\n            >\n              <ListItemIcon>\n                <StyledLocationOnIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={`${item.features} - 限速 ${item.speedLimit}`}\n                secondary={item.address}\n              />\n            </StyledListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </Fragment>\n        );\n      });\n\n      setCameraItems(items);\n    }\n  }, [gMap, createdMarkers, filterCameraList, selectedCameraNo]);\n\n  return (\n    <StyledPaper>\n      {loadGoogleError && (\n        <StyledMapLoadError>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Box>\n              <WarningRoundedIcon />\n            </Box>\n            <Box>系統發生異常</Box>\n          </Box>\n        </StyledMapLoadError>\n      )}\n      {!loadGoogleError && (\n        <Grid container>\n          <Grid item xs={12} sm={!google && !gMap ? 12 : 8}>\n            <StyledMapContainer id={mapElementID} ref={googleMapRef}>\n              {!google && !gMap && <MuiLoadingPage />}\n            </StyledMapContainer>\n          </Grid>\n          {cameraItems && (\n            <Grid item xs={12} sm={4}>\n              <StyledListContainer>\n                <List>\n                  <StyledListItem role={undefined} dense>\n                    <MuiTextField\n                      label=\"Search...\"\n                      onChange={handleSearchFieldChange}\n                      fullWidth\n                    />\n                  </StyledListItem>\n                </List>\n                <StyledList ref={cameraListRef}>{cameraItems}</StyledList>\n              </StyledListContainer>\n            </Grid>\n          )}\n        </Grid>\n      )}\n    </StyledPaper>\n  );\n};\nGoogleMaps.propTypes = {\n  theme: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withTheme(GoogleMaps);\n","import React from 'react';\nimport styled from 'styled-components';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst StyledMessageContent = styled.div`\ntext-align: left;\n`;\nconst StyledIcon = styled.div`\ncolor: ${({ theme }) => theme.highlight};\n`;\n\nconst StyledNote = styled.p`\ncolor: ${({ theme }) => theme.highlight};\n`;\n\nconst MessageModal = () => {\n  return (\n    <>\n      <StyledIcon>\n        <ErrorIcon fontSize=\"large\" />\n      </StyledIcon>\n      <StyledMessageContent>\n        <StyledNote>\n          api僅提供中文地址，經緯度是透過 google api geocode 轉換的，因此\n        </StyledNote>\n        <StyledNote>\n          1. 會有一些地址在轉換時 api 會找不到經緯度，地圖上不會顯示地標\n        </StyledNote>\n        <StyledNote>\n          2. 地圖上的地標只會是大略的位置，還請參照文字給的地址來確認\n        </StyledNote>\n        <br />\n        <p>因為 api 不支援跨網域，且來源只提供 csv 檔，呈現資料為手動更新，故有可能不會有最新資料。</p>\n        <br />\n        <p>資料最後更新日期: 2021-11-17 09:25:55</p>\n        <p>資料來源: </p>\n        <p>\n          <a href=\"https://data.taipei/#/dataset/detail?id=745b8808-061f-4f5b-9a62-da1590c049a9\">\n            臺北市資料大平臺\n          </a>\n        </p>\n      </StyledMessageContent>\n    </>\n  );\n};\n\nMessageModal.propTypes = {\n\n};\n\nexport default MessageModal;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n    resettTaipeiSpeedCameraPositions,\n} from '../../redux/actions';\n\nimport { MuiPageSpinner } from '../../components/muiCircularProgress';\nimport MuiModal from '../../components/MuiModal';\n\nimport useTaipeiSpeedCameraPositions from './useTaipeiSpeedCameraPositions';\nimport GoogleMaps from './GoogleMaps';\nimport MessageModal from './MessageModal';\n\nconst index = () => {\n    const dispatch = useDispatch();\n\n    const {\n        taipeiSpeedCameraPositions,\n        taipeiSpeedCameraPositionsLoading,\n        taipeiSpeedCameraPositionsError,\n        getTaipeiSpeedCameraPositionsApi,\n        getFakeTaipeiSpeedCameraPositions,\n    } = useTaipeiSpeedCameraPositions();\n\n    useEffect(() => {\n        getTaipeiSpeedCameraPositionsApi();\n        return () => dispatch(resettTaipeiSpeedCameraPositions());\n    }, []);\n\n    const [messageModalIsOpen, setMessageModalIsOpen] = useState(false);\n    const handaleMessageModalOpen = () => { setMessageModalIsOpen(true); };\n    const handaleMessageModalClose = () => { setMessageModalIsOpen(false); };\n\n    // 因為 api 不支援跨網域，且來源只提共csv檔\n    // 故多了此步驟\n    useEffect(() => {\n        if (taipeiSpeedCameraPositionsError !== null && taipeiSpeedCameraPositions.length === 0) {\n            console.log('use fake data');\n            getFakeTaipeiSpeedCameraPositions();\n            handaleMessageModalOpen();\n        }\n    }, [taipeiSpeedCameraPositionsError]);\n\n    return (\n        <div>\n            <div className=\"page-title\">臺北市固定測速照相地點</div>\n            {taipeiSpeedCameraPositionsLoading &&\n                <MuiPageSpinner />\n            }\n            {taipeiSpeedCameraPositionsLoading === false && taipeiSpeedCameraPositions.length > 0 &&\n                <GoogleMaps />\n            }\n            <MuiModal\n                open={messageModalIsOpen}\n                handaleClose={handaleMessageModalClose}\n            >\n                <MessageModal />\n            </MuiModal>\n        </div>\n    );\n};\n\nindex.propTypes = {\n\n};\n\nexport default (index);\n"],"sourceRoot":""}