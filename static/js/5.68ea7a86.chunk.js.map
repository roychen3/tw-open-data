{"version":3,"sources":["constants/actionTypes/index.js","redux/holiday/actions.js","redux/weather/actions.js","redux/taipeiSpeedCameraPositions/actions.js","components/MuiModal.js","components/MuiLabelSelect.js","pages/weather/useWeather.js","pages/weather/MessageModal.js","pages/weather/WeatherCard.js","pages/weather/map/TaiwamMap.js","pages/weather/index.js"],"names":["GET_HOLIDAY","GET_HOLIDAY_SUCCESS","GET_HOLIDAY_FAILURE","RESET_HOLIDAY","GET_WEATHER","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","RESET_WEATHER","GET_TAIPEI_SPEED_CAMERA_POSITIONS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE","RESET_TAIPEI_SPEED_CAMERA_POSITIONS","getHoliday","payload","type","getHolidaySuccess","getHolidayFailure","getWeather","getWeatherSuccess","getWeatherFailure","resettWeather","getTaipeiSpeedCameraPositions","getTaipeiSpeedCameraPositionsSuccess","getTaipeiSpeedCameraPositionsFailure","resettTaipeiSpeedCameraPositions","StyledModalContainer","styled","div","theme","secondBackground","MuiModal","open","handaleClose","children","onClose","StyledFormControl","FormControl","StyledMenuItem","MenuItem","MuiLabelSelect","labelId","labelText","SelectId","value","setValue","selectionItems","React","useState","setOpen","selectionMenuItemList","map","item","name","id","onOpen","onChange","event","target","useWeather","dispatch","useDispatch","weatherCountyList","useSelector","state","weather","weatherAllLocation","weatherAllLocationError","weatherAllLocationLoading","determineDayDescription","date","Date","getFullYear","getMonth","getDate","determineTimeDescription","hours","getWeatherApi","axios","get","then","resultData","allLocationData","data","cwbopendata","dataset","location","countyList","locationName","catch","err","getFakeWeatherAllLocation","fakeData","creatWeatherCardList","weatherDescriptionList","maximumTemperatureList","minimumTemperatureList","probabilityOfPrecipitationList","weatherElement","forEach","elementName","push","time","weatherCardList","index","weatherDescriptionName","parameter","parameterName","weatherDescriptionCode","parameterValue","startTime","endTime","weatherPeriodTime","getHours","unit","parameterUnit","maximumTemperature","minimumTemperature","probabilityOfPrecipitation","propTypes","StyledIcon","highlight","MessageModal","fontSize","href","StyledCard","Card","StyledCardContent","CardContent","StyledPeriodTime","StyledDescriptionName","StyledTemperature","StyledProbabilityOfPrecipitation","StyledProbabilityOfPrecipitationText","WeatherCard","variant","StyledMap","mainText","mainBackground","TaiwamMap","selectedCounty","setCounty","mapRef","useRef","useEffect","projection","d3","center","scale","path","current","attr","selectAll","taiwanCounty","features","enter","append","countyInfo","properties","COUNTYNAME","on","countyPathElement","document","querySelector","classList","remove","add","ref","StyledForeachContainer","StyledCardListContainer","setSelectedCounty","setWeatherCardList","messageModalIsOpen","setMessageModalIsOpen","length","selectedWeatherData","find","showWeatherCardList","className","Hidden","xsDown"],"mappings":"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","file":"static/js/5.68ea7a86.chunk.js","sourcesContent":["// === holiday ===\nexport const GET_HOLIDAY = 'GET_HOLIDAY';\nexport const GET_HOLIDAY_SUCCESS = 'GET_HOLIDAY_SUCCESS';\nexport const GET_HOLIDAY_FAILURE = 'GET_HOLIDAY_FAILURE';\nexport const RESET_HOLIDAY = 'RESET_HOLIDAY';\n\n// === weather ===\nexport const GET_WEATHER = 'GET_WEATHER';\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILURE = 'GET_WEATHER_FAILURE';\nexport const RESET_WEATHER = 'RESET_WEATHER';\n\n// === taipei speed camera position ===\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS';\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS';\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE';\nexport const RESET_TAIPEI_SPEED_CAMERA_POSITIONS = 'RESET_TAIPEI_SPEED_CAMERA_POSITIONS';\n","import {\n    GET_HOLIDAY,\n    GET_HOLIDAY_SUCCESS,\n    GET_HOLIDAY_FAILURE,\n    RESET_HOLIDAY,\n} from '../../constants/actionTypes';\n\nexport const getHoliday = (payload) => ({\n    type: GET_HOLIDAY,\n    payload,\n});\n\nexport const getHolidaySuccess = (payload) => ({\n    type: GET_HOLIDAY_SUCCESS,\n    payload,\n});\n\nexport const getHolidayFailure = (payload) => ({\n    type: GET_HOLIDAY_FAILURE,\n    payload,\n});\n\nexport const resetHoliday = (payload) => ({\n    type: RESET_HOLIDAY,\n    payload,\n});","import {\n    GET_WEATHER,\n    GET_WEATHER_SUCCESS,\n    GET_WEATHER_FAILURE,\n    RESET_WEATHER,\n} from '../../constants/actionTypes';\n\nexport const getWeather = (payload) => ({\n    type: GET_WEATHER,\n    payload,\n});\n\nexport const getWeatherSuccess = (payload) => ({\n    type: GET_WEATHER_SUCCESS,\n    payload,\n});\n\nexport const getWeatherFailure = (payload) => ({\n    type: GET_WEATHER_FAILURE,\n    payload,\n});\n\nexport const resettWeather = (payload) => ({\n    type: RESET_WEATHER,\n    payload,\n});","import {\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\n    RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\n} from '../../constants/actionTypes';\n\nexport const getTaipeiSpeedCameraPositions = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    payload,\n});\n\nexport const getTaipeiSpeedCameraPositionsSuccess = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\n    payload,\n});\n\nexport const getTaipeiSpeedCameraPositionsFailure = (payload) => ({\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\n    payload,\n});\n\nexport const resettTaipeiSpeedCameraPositions = (payload) => ({\n    type: RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\n    payload,\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Modal from '@material-ui/core/Modal';\n\nconst StyledModalContainer = styled.div`\n  position: absolute;\n  width: 90%;\n  @media (min-width: 600px) {\n    width: 50%;\n  }\n  text-align: center;\n  background-color: ${({ theme }) => theme.secondBackground};\n  padding: 2rem 1rem;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst MuiModal = ({ open, handaleClose, children }) => {\n  return (\n    <Modal open={open} onClose={handaleClose}>\n      <StyledModalContainer>{children}</StyledModalContainer>\n    </Modal>\n  );\n};\n\nMuiModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handaleClose: PropTypes.func.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default MuiModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst StyledFormControl = styled(FormControl)`\nmargin: 0.5rem !important;\nmin-width 70px !important;\n`;\nconst StyledMenuItem = styled(MenuItem)``;\n\nconst MuiLabelSelect = ({\n  labelId,\n  labelText,\n  SelectId,\n  value,\n  setValue,\n  selectionItems,\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const selectionMenuItemList = selectionItems.map((item) => (\n    <StyledMenuItem key={item.value} value={item.value}>\n      {item.name}\n    </StyledMenuItem>\n  ));\n\n  return (\n    <StyledFormControl>\n      <InputLabel id={labelId}>{labelText}</InputLabel>\n      <Select\n        labelId=\"year-select-label\"\n        id={SelectId}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={value}\n        onChange={handleChange}\n      >\n        {selectionMenuItemList}\n      </Select>\n    </StyledFormControl>\n  );\n};\n\nMuiLabelSelect.propTypes = {\n  labelId: PropTypes.string.isRequired,\n  labelText: PropTypes.string.isRequired,\n  SelectId: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n  selectionItems: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default MuiLabelSelect;\n","import { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport {\n    getWeather,\n    getWeatherSuccess,\n    getWeatherFailure,\n} from '../../redux/actions';\nimport fakeData from './fakeData.json';\n\nconst useWeather = () => {\n    const dispatch = useDispatch();\n\n    const weatherCountyList = useSelector((state) => state.weather.weatherCountyList);\n    const weatherAllLocation = useSelector((state) => state.weather.weatherAllLocation);\n    const weatherAllLocationError = useSelector((state) => state.weather.weatherAllLocationError);\n    const weatherAllLocationLoading = useSelector((state) => state.weather.weatherAllLocationLoading);\n\n    const determineDayDescription = (date) => {\n        const determineDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());\n\n        const diffTime = determineDate - currentDate;\n        const diffDays = diffTime / (1000 * 60 * 60 * 24);\n\n        switch (diffDays) {\n            case -2:\n                return '前天';\n            case -1:\n                return '昨天';\n            case 0:\n                return '今天';\n            case 1:\n                return '明天';\n            case 2:\n                return '後天';\n\n            default:\n                return '';\n        }\n    };\n\n    const determineTimeDescription = (hours) => {\n        const midnightTime = 0;\n        const morningTime = 6;\n        const noonTime = 12;\n        const eveningTime = 18;\n\n        if (morningTime <= hours && hours < noonTime) {\n            return '早上';\n        } else if (noonTime <= hours && hours < eveningTime) {\n            return '下午';\n        } else if (eveningTime <= hours) {\n            return '晚上';\n        } else if (midnightTime <= hours && hours < morningTime) {\n            return '凌晨';\n        }\n    };\n\n    const creatWeatherCardList = (data) => {\n        const weatherDescriptionList = [];\n        const maximumTemperatureList = [];\n        const minimumTemperatureList = [];\n        const probabilityOfPrecipitationList = [];\n        data.weatherElement.forEach((item) => {\n            switch (item.elementName) {\n                case 'Wx':\n                    weatherDescriptionList.push(...item.time);\n                    break;\n\n                case 'MaxT':\n                    maximumTemperatureList.push(...item.time);\n                    break;\n\n                case 'MinT':\n                    minimumTemperatureList.push(...item.time);\n                    break;\n\n                case 'PoP':\n                    probabilityOfPrecipitationList.push(...item.time);\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        const weatherCardList = [{}, {}, {}];\n\n        weatherDescriptionList.forEach((item, index) => {\n            const weatherDescriptionName = item.parameter.parameterName;\n            const weatherDescriptionCode = item.parameter.parameterValue;\n            weatherCardList[index].weatherDescriptionName = weatherDescriptionName;\n            weatherCardList[index].weatherDescriptionCode = weatherDescriptionCode;\n\n            const startTime = new Date(item.startTime);\n            const endTime = new Date(item.endTime);\n            const weatherPeriodTime = `${determineDayDescription(startTime)}${determineTimeDescription(startTime.getHours())} 至 ${determineDayDescription(endTime)}${determineTimeDescription(endTime.getHours())}`;\n            weatherCardList[index].weatherPeriodTime = weatherPeriodTime;\n        });\n\n        maximumTemperatureList.forEach((item, index) => {\n            const value = item.parameter.parameterName;\n            const unit = item.parameter.parameterUnit === 'C' ? '°C' : '°F';\n            weatherCardList[index].maximumTemperature = `${value}${unit}`;\n        });\n\n        minimumTemperatureList.forEach((item, index) => {\n            const value = item.parameter.parameterName;\n            const unit = item.parameter.parameterUnit === 'C' ? '°C' : '°F';\n            weatherCardList[index].minimumTemperature = `${value}${unit}`;\n        });\n\n        probabilityOfPrecipitationList.forEach((item, index) => {\n            const value = item.parameter.parameterName;\n            const unit = item.parameter.parameterUnit === '百分比' ? '%' : '';\n            weatherCardList[index].probabilityOfPrecipitation = `${value}${unit}`;\n        });\n\n        return weatherCardList;\n    };\n\n    const getWeatherApi = () => {\n        dispatch(getWeather());\n\n        axios.get('https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON')\n            .then((resultData) => {\n                const allLocationData = resultData.data.cwbopendata.dataset.location;\n                const countyList = allLocationData.map((item) => ({ value: item.locationName, name: item.locationName }));\n                dispatch(getWeatherSuccess({\n                    weatherCountyList: countyList,\n                    weatherAllLocation: allLocationData,\n                }));\n            })\n            .catch((err) => {\n                dispatch(getWeatherFailure(err));\n            });\n    };\n\n    const getFakeWeatherAllLocation = () => {\n        const allLocationData = fakeData.cwbopendata.dataset.location;\n        const countyList = allLocationData.map((item) => ({ value: item.locationName, name: item.locationName }));\n        dispatch(getWeatherSuccess({\n            weatherCountyList: countyList,\n            weatherAllLocation: allLocationData,\n        }));\n    };\n\n    return {\n        weatherCountyList,\n        weatherAllLocation,\n        weatherAllLocationError,\n        weatherAllLocationLoading,\n        getWeatherApi,\n        getFakeWeatherAllLocation,\n        determineDayDescription,\n        determineTimeDescription,\n        creatWeatherCardList\n    };\n};\n\nuseWeather.propTypes = {\n\n};\n\nexport default useWeather;","import React from 'react';\nimport styled from 'styled-components';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst StyledIcon = styled.div`\ncolor: ${({ theme }) => theme.highlight};\n`;\n\nconst MessageModal = () => {\n  return (\n    <div>\n      <StyledIcon>\n        <ErrorIcon fontSize=\"large\" />\n      </StyledIcon>\n      <p>API 網址發生錯誤，呈現資料為開發用假資料。</p>\n      <br />\n      <p>資料來源: <a href=\"https://data.gov.tw/dataset/6069\">政府資料開放平臺</a></p>\n    </div>\n  );\n};\n\nMessageModal.propTypes = {\n\n};\n\nexport default MessageModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst StyledCard = styled(Card)`\nbackground-color: ${({ theme }) => theme.secondBackground} !important;\nmargin: 3px;\nmin-width: 160px;\nmin-height: 200px;\n\n@media (min-width: 600px) {\n    max-width: 160px;\n    max-height: 200px;\n}\n`;\nconst StyledCardContent = styled(CardContent)`\ntext-align: center;\npadding: 1rem !important;\n`;\nconst StyledPeriodTime = styled.div`\nfont-size: small;\nmargin-top: 1rem;\n`;\nconst StyledDescriptionName = styled.div`\nfont-size: small;\nmargin: 3rem 0;\n@media (min-width: 600px) {\n    margin: 1rem 0;\n}\n`;\nconst StyledTemperature = styled.div`\nmargin: 2rem 0;\n@media (min-width: 600px) {\n    margin: 1rem 0;\n}\n`;\nconst StyledProbabilityOfPrecipitation = styled.div`\nmargin-bottom: 1rem;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`;\nconst StyledProbabilityOfPrecipitationText = styled.div`\nmargin-left: 1rem\n`;\n\nconst WeatherCard = ({ data }) => {\n    return (\n        <StyledCard variant=\"outlined\">\n            <StyledCardContent>\n                <StyledPeriodTime>\n                    {data.weatherPeriodTime}\n                </StyledPeriodTime>\n                <StyledDescriptionName>\n                    {data.weatherDescriptionName}\n                </StyledDescriptionName>\n                <StyledTemperature>\n                    {`${data.maximumTemperature} - ${data.minimumTemperature}`}\n                </StyledTemperature>\n                <StyledProbabilityOfPrecipitation>\n                    <BeachAccessIcon />\n                    <StyledProbabilityOfPrecipitationText>\n                        {data.probabilityOfPrecipitation}\n                    </StyledProbabilityOfPrecipitationText>\n                </StyledProbabilityOfPrecipitation>\n            </StyledCardContent>\n        </StyledCard>\n    );\n};\n\nWeatherCard.propTypes = {\n    data: PropTypes.instanceOf(Object).isRequired\n};\n\nexport default WeatherCard;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport taiwanCounty from './taiwan-county.json';\n\nconst StyledMap = styled.div`\nflex-grow: 2;\n\nsvg#taiwan-map{\n    width: 400px;\n    height: 500px;\n}\n\nsvg#taiwan-map path {\n    fill: transparent;\n    stroke: ${({ theme }) => theme.mainText};\n    cursor: pointer;\n    transition: fill .2s ease, stroke .2s ease, transform .2s ease;\n}\n\nsvg#taiwan-map path:hover, \nsvg#taiwan-map path.active {\n    fill: ${({ theme }) => theme.highlight};\n    stroke: ${({ theme }) => theme.mainBackground};\n    transform: translateY(-5px);\n}\n\n@media (min-width: 600px) {\n    text-align: center;\n}\n@media (min-width: 960px){\n    text-align: start;\n}\n`;\n\nconst TaiwamMap = ({ selectedCounty, setCounty }) => {\n    const mapRef = useRef();\n\n    useEffect(() => {\n        // 判斷螢幕寬度，給不同放大值\n        let mercatorScale = 14000;\n\n        // d3：svg path 產生器\n        const projection = d3.geoMercator()\n            .center([121.2, 24.2])\n            .scale(mercatorScale);\n        // .translate([50%, 50%])\n\n        var path = d3.geoPath(projection);\n\n        // 讓d3抓svg，並寫入寬高\n        var svg = d3.select(mapRef.current)\n            .attr('viewBox', '0 0 800 800');\n\n        svg.selectAll('path')\n            .data(taiwanCounty.features)\n            .enter()\n            .append('path')\n            .attr('d', path)\n            .attr('id', (countyInfo) => {\n                // 設定id，為了click時加class用\n                return countyInfo.properties.COUNTYNAME;\n            })\n            .on('click', (countyPathElement) => {\n                setCounty(countyPathElement.target.id);\n            });\n    }, []);\n\n    useEffect(() => {\n        // 有 .active 存在，就移除 .active\n        if (document.querySelector('#taiwan-map .active')) {\n            document.querySelector('#taiwan-map .active').classList.remove('active');\n        }\n        // 被點擊的縣市加上 .active\n        document.querySelector(`#taiwan-map #${selectedCounty}`).classList.add('active');\n    }, [selectedCounty]);\n\n    return (\n        <StyledMap>\n            <svg ref={mapRef} id=\"taiwan-map\" ></svg>\n        </StyledMap>\n    );\n};\n\nTaiwamMap.propTypes = {\n    selectedCounty: PropTypes.string.isRequired,\n    setCounty: PropTypes.func.isRequired,\n};\n\nexport default TaiwamMap;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Hidden from '@material-ui/core/Hidden';\nimport { useDispatch } from 'react-redux';\n\nimport {\n    resettWeather,\n} from '../../redux/actions';\n\nimport { MuiPageSpinner } from '../../components/muiCircularProgress';\nimport MuiLabelSelect from '../../components/MuiLabelSelect';\nimport MuiModal from '../../components/MuiModal';\n\nimport useWeather from './useWeather';\nimport MessageModal from './MessageModal';\nimport WeatherCard from './WeatherCard';\n\nimport TaiwamMap from './map/TaiwamMap';\n\nconst StyledForeachContainer = styled.div`\ndisplay: flex;\n\n@media (min-width: 600px) {\n    flex-direction: column;\n}\n@media (min-width: 960px){\n    flex-direction: row;\n`;\nconst StyledCardListContainer = styled.div`\nflex-grow: 1;\nmargin: 2rem 0;\ndisplay: flex;\nflex-direction: column;\n\n@media (min-width: 600px) {\n    flex-direction: row;\n    justify-content: center;\n}\n@media (min-width: 960px){\n    flex-wrap: wrap;\n    justify-content: start;\n    align-content: start;\n}\n`;\n\nconst index = () => {\n    const dispatch = useDispatch();\n    const {\n        weatherCountyList,\n        weatherAllLocation,\n        weatherAllLocationLoading,\n        weatherAllLocationError,\n        getWeatherApi,\n        getFakeWeatherAllLocation,\n        creatWeatherCardList,\n    } = useWeather();\n\n    const [selectedCounty, setSelectedCounty] = useState('');\n    const [weatherCardList, setWeatherCardList] = useState([]);\n    const [messageModalIsOpen, setMessageModalIsOpen] = useState(false);\n\n    const handaleMessageModalOpen = () => { setMessageModalIsOpen(true); };\n    const handaleMessageModalClose = () => { setMessageModalIsOpen(false); };\n\n    useEffect(() => {\n        if (weatherCountyList.length > 0) setSelectedCounty(weatherCountyList[0].value);\n    }, [weatherCountyList]);\n\n    useEffect(() => {\n        if (selectedCounty && weatherAllLocation.length > 0) {\n            const selectedWeatherData = weatherAllLocation.find((item) => item.locationName === selectedCounty);\n            setWeatherCardList(creatWeatherCardList(selectedWeatherData));\n        }\n    }, [selectedCounty, weatherAllLocation]);\n\n    useEffect(() => {\n        getWeatherApi();\n\n        return () => {\n            dispatch(resettWeather());\n        };\n    }, []);\n\n    useEffect(() => {\n        if (weatherAllLocationError !== null) {\n            handaleMessageModalOpen();\n            getFakeWeatherAllLocation();\n        }\n    }, [weatherAllLocationError]);\n\n    const showWeatherCardList = weatherCardList.map((item, index) => <WeatherCard key={index} data={item} />);\n\n    return (\n        <div>\n            <div className=\"page-title\">天氣預報</div>\n            {weatherAllLocationLoading &&\n                <MuiPageSpinner />\n            }\n            <MuiLabelSelect\n                labelId=\"county-select-label\"\n                labelText=\"county\"\n                SelectId=\"county-select\"\n                value={selectedCounty}\n                setValue={setSelectedCounty}\n                selectionItems={weatherCountyList}\n            />\n            {weatherAllLocationLoading === false && weatherCardList.length > 0 &&\n                <StyledForeachContainer>\n                    <StyledCardListContainer>\n                        {showWeatherCardList}\n                    </StyledCardListContainer>\n                    <Hidden xsDown>\n                        <TaiwamMap selectedCounty={selectedCounty} setCounty={setSelectedCounty} />\n                    </Hidden>\n                </StyledForeachContainer>\n            }\n            <MuiModal\n                open={messageModalIsOpen}\n                handaleClose={handaleMessageModalClose}\n            >\n                <MessageModal />\n            </MuiModal>\n        </div>\n    );\n};\n\nindex.propTypes = {\n\n};\n\nexport default index;\n"],"sourceRoot":""}