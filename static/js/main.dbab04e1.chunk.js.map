{"version":3,"sources":["webTheme.js","globalStyles.js","components/MuiSwitchToggleTheme.js","components/Menu.js","constants/menuList.js","components/MobileMenu.js","layout/Header.js","routes/index.js","layout/Content.js","layout/Footer.js","layout/index.js","App.js","redux/initialReducers.js","redux/store.js","index.js","components/muiCircularProgress/MuiCircularProgress.js","components/muiCircularProgress/MuiPageSpinner.js","components/muiCircularProgress/MuiLoadingPage.js"],"names":["lightTheme","themeName","hover","highlight","mainText","secondText","mainBackground","secondBackground","error","darkTheme","GlobalStyles","createGlobalStyle","theme","StyledSwitch","styled","Switch","MuiSwitchToggleTheme","toggleTheme","localWebTheme","window","localStorage","getItem","checked","color","size","onChange","StyledMenuContainer","div","StyledIconButton","IconButton","StyledToggleThemeContainer","Menu","href","target","rel","menuList","hashName","itemName","icon","StyledListItem","ListItem","ListItemLink","primary","to","closeMenu","forwardRefLink","itemProps","ref","renderLink","useMemo","forwardRef","button","component","onClick","ListItemIcon","ListItemText","StyledMobileMenuContainer","StyledMobileMenuClose","StyledDivider","Divider","StyledListItemToggleTheme","MobileMenu","linkList","map","item","List","Hidden","smUp","StyledHeader","header","StyledTitleContainer","StyledTitle","StyledDataUsageIcon","DataUsageIcon","StyledDrawer","Drawer","Header","useState","mobilMenuIsOpen","setMobilMenuIsOpen","toggleMobilMenuDrawer","open","Grid","container","spacing","xs","variant","anchor","onClose","xsDown","StyledPageContainer","$needFullWidth","StyledContent","Content","routeList","store","useStore","Holiday","lazy","then","reducer","injectReducer","default","Weather","TaipeiSpeedCameraPositions","getPageComponents","name","exact","path","includes","creatRouteList","from","StyledFooter","footer","Footer","index","App","webTheme","setWebTheme","setItem","useEffect","basename","fallback","className","initialState","state","action","type","middleware","thunk","staticReducers","static","initialReducers","createReducer","asyncReducers","combineReducers","createStore","applyMiddleware","key","asyncReducer","replaceReducer","initStore","ReactDOM","render","document","getElementById","CircularProgress","StyledSpinnerContainer","StyledCircularProgress","MuiPageSpinner","MuiLoadingPage"],"mappings":"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","file":"static/js/main.dbab04e1.chunk.js","sourcesContent":["export const lightTheme = {\r\n  themeName: 'light',\r\n  hover: '#f1f1f1',\r\n  highlight: '#18df16',\r\n  mainText: '#000000',\r\n  secondText: ' #14213d',\r\n  mainBackground: ' #ffffff ',\r\n  secondBackground: '#f1f1f1',\r\n  error: '#D23A39',\r\n}\r\n\r\nexport const darkTheme = {\r\n  themeName: 'dark',\r\n  hover: '#242526',\r\n  highlight: '#18df16',\r\n  mainText: ' #ffffff',\r\n  secondText: '#e5e5e5',  \r\n  mainBackground: ' #18191a',\r\n  secondBackground: '#242526',\r\n  error: '#D23A39',\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n* {\r\n  font-family: NotoSansTCRegular, QuicksandRegular, sans-serif !important;\r\n  margin: 0;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody,\r\n#root,\r\n.app {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  color: ${({ theme }) => theme.mainText};\r\n  background-color: ${({ theme }) => theme.mainBackground};\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.mainText};\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.highlight};\r\n    cursor: pointer;\r\n  }\r\n}\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\r\n\r\nconst StyledSwitch = styled(Switch)`\r\n.MuiSwitch-track{\r\n    background-color: ${({ theme }) => theme.secondText};\r\n}\r\n.MuiSwitch-thumb{\r\n    color: ${({ theme }) => theme.mainText};\r\n}\r\n`\r\n\r\nconst MuiSwitchToggleTheme = ({ toggleTheme }) => {\r\n    const localWebTheme = window.localStorage.getItem('webTheme')\r\n\r\n    return (\r\n        <>\r\n            <Brightness4Icon />\r\n            <StyledSwitch\r\n                checked={localWebTheme === 'light' ? true : false}\r\n                color=\"default\"\r\n                size=\"small\"\r\n                onChange={toggleTheme}\r\n            />\r\n            <Brightness7Icon />\r\n        </>\r\n    )\r\n}\r\n\r\nMuiSwitchToggleTheme.propTypes = {\r\n    toggleTheme: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default MuiSwitchToggleTheme\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\n\r\nimport MuiSwitchToggleTheme from '../components/MuiSwitchToggleTheme'\r\n\r\nconst StyledMenuContainer = styled.div`\r\nmin-height: 30px;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: flex-end;\r\nalign-items: center;\r\n\r\na{\r\n  margin-right: 1rem;\r\n\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n}\r\n`\r\nconst StyledIconButton = styled(IconButton)`\r\ncolor: ${({ theme }) => theme.mainText} !important;\r\n\r\n&.MuiButtonBase-root.MuiIconButton-root {\r\n  padding: 0 !important;\r\n}\r\n\r\n:hover {\r\n  color: ${({ theme }) => theme.highlight} !important;\r\n}\r\n`\r\n\r\nconst StyledToggleThemeContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\ncolor: ${({ theme }) => theme.mainText} !important;\r\n`\r\n\r\nconst Menu = ({ toggleTheme }) => {\r\n  return (\r\n    <StyledMenuContainer>\r\n      <StyledIconButton href='https://github.com/roychen3' target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <GitHubIcon />\r\n      </StyledIconButton>\r\n      <StyledToggleThemeContainer>\r\n        <MuiSwitchToggleTheme\r\n          toggleTheme={toggleTheme}\r\n        />\r\n      </StyledToggleThemeContainer>\r\n    </StyledMenuContainer>\r\n  )\r\n}\r\n\r\nMenu.propTypes = {\r\n  toggleTheme: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Menu\r\n","import EventAvailableIcon from '@material-ui/icons/EventAvailable'\r\nimport CloudIcon from '@material-ui/icons/Cloud'\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt'\r\n\r\nexport const menuList = [\r\n    {\r\n        hashName: 'holiday',\r\n        itemName: '國定假日',\r\n        icon: <EventAvailableIcon />,\r\n    },\r\n    {\r\n        hashName: 'weather',\r\n        itemName: '天氣預報',\r\n        icon: <CloudIcon />,\r\n    },\r\n    {\r\n        hashName: 'taipeiSpeedCameraPositions',\r\n        itemName: '臺北市固定測速照相地點',\r\n        icon: <CameraAltIcon />,\r\n    },\r\n]\r\n","import React, { useMemo, forwardRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\n\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Hidden from '@material-ui/core/Hidden'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\n\r\nimport { menuList } from '../constants/menuList'\r\nimport MuiSwitchToggleTheme from '../components/MuiSwitchToggleTheme'\r\n\r\nconst StyledListItem = styled(ListItem)`\r\ncolor: ${({ theme }) => theme.mainText};\r\n\r\n.MuiListItemIcon-root .MuiSvgIcon-root {\r\n    color: ${({ theme }) => theme.mainText};\r\n}\r\n\r\n:hover {\r\n    color: ${({ theme }) => theme.highlight};\r\n    background-color: ${({ theme }) => theme.hover} !important;\r\n\r\n    .MuiListItemIcon-root .MuiSvgIcon-root {\r\n        color: ${({ theme }) => theme.highlight};\r\n    }\r\n}\r\n`\r\n\r\nconst ListItemLink = ({ icon, primary, to, closeMenu }) => {\r\n    const forwardRefLink = (itemProps, ref) => (<RouterLink to={to} ref={ref} {...itemProps} />)\r\n\r\n    const renderLink = useMemo(() => (\r\n        forwardRef(forwardRefLink)),\r\n        [to],\r\n    )\r\n\r\n    return (\r\n        <li>\r\n            <StyledListItem button component={renderLink} onClick={closeMenu}>\r\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n                <ListItemText primary={primary} />\r\n            </StyledListItem>\r\n        </li>\r\n    )\r\n}\r\n\r\nListItemLink.propTypes = {\r\n    icon: PropTypes.element,\r\n    primary: PropTypes.string.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n    closeMenu: PropTypes.func.isRequired,\r\n}\r\n\r\nconst StyledMobileMenuContainer = styled.div`\r\nwidth: 250px;\r\n`\r\nconst StyledMobileMenuClose = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: flex-end;\r\npadding: 1rem;\r\n`\r\nconst StyledIconButton = styled(IconButton)`\r\ncolor: ${({ theme }) => theme.mainText} !important;\r\n\r\n:hover {\r\n    background-color: ${({ theme }) => theme.hover} !important;\r\n}\r\n`\r\nconst StyledDivider = styled(Divider)`\r\nbackground-color: ${({ theme }) => theme.mainBackground} !important;\r\n`\r\nconst StyledListItemToggleTheme = styled(ListItem)`\r\njustify-content: center !important;\r\n`\r\n\r\nconst MobileMenu = ({ closeMenu, toggleTheme }) => {\r\n    const linkList = menuList.map((item) => (\r\n        <ListItemLink\r\n            key={item.hashName}\r\n            to={`/${item.hashName}`}\r\n            primary={item.itemName}\r\n            icon={item.icon}\r\n            closeMenu={closeMenu}\r\n        />))\r\n\r\n    return (\r\n        <StyledMobileMenuContainer>\r\n            <StyledMobileMenuClose>\r\n                <StyledIconButton size=\"small\" onClick={closeMenu}>\r\n                    <ChevronLeftIcon />\r\n                </StyledIconButton>\r\n            </StyledMobileMenuClose>\r\n            <StyledDivider />\r\n            <List>\r\n                {linkList}\r\n            </List>\r\n            <Hidden smUp>\r\n                <StyledDivider />\r\n                <List>\r\n                    <StyledListItem\r\n                        button\r\n                        component=\"a\"\r\n                        href='https://github.com/roychen3'\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        <ListItemIcon>\r\n                            <GitHubIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Author\" />\r\n                    </StyledListItem>\r\n                </List>\r\n                <StyledDivider />\r\n                <List>\r\n                    <StyledListItemToggleTheme>\r\n                        <MuiSwitchToggleTheme\r\n                            toggleTheme={toggleTheme}\r\n                        />\r\n                    </StyledListItemToggleTheme>\r\n                </List>\r\n            </Hidden>\r\n        </StyledMobileMenuContainer>\r\n    )\r\n}\r\n\r\nMobileMenu.propTypes = {\r\n    closeMenu: PropTypes.func.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default MobileMenu\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport DataUsageIcon from '@material-ui/icons/DataUsage'\r\nimport Drawer from '@material-ui/core/Drawer'\r\n\r\nimport Menu from '../components/Menu'\r\nimport MobileMenu from '../components/MobileMenu'\r\n\r\nconst StyledHeader = styled.header`\r\nwidth: 100%;\r\npadding: 1rem;\r\nbackground-color: ${({ theme }) => theme.secondBackground};\r\nposition: fixed;\r\nz-index: 110;\r\n`\r\nconst StyledTitleContainer = styled.div`\r\nmin-height: 30px;\r\nheight: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\nconst StyledTitle = styled.div`\r\nmargin: auto 0;\r\nfont-size: large;\r\nfont-weight: bolder;\r\ncolor: ${({ theme }) => theme.mainText};\r\n`\r\nconst StyledIconButton = styled(IconButton)`\r\nmargin-right: 10px !important;\r\ncolor: ${({ theme }) => theme.mainText} !important;\r\n\r\n:hover {\r\n    background-color: ${({ theme }) => theme.hover} !important;\r\n}\r\n`\r\nconst StyledDataUsageIcon = styled(DataUsageIcon)`\r\nmargin: auto 0;\r\ncolor: ${({ theme }) => theme.highlight};\r\n`\r\nconst StyledDrawer = styled(Drawer)`\r\n.MuiPaper-root {\r\n  background-color: ${({ theme }) => theme.secondBackground};\r\n  color: ${({ theme }) => theme.mainText};\r\n  border-right: solid 1px ${({ theme }) => theme.mainBackground};\r\n  box-shadow: inset 0px 0px 0px -100px ${({ theme }) => theme.hover},13px 0px 18px 0px #00000080;\r\n}\r\n`\r\n\r\nconst Header = ({ toggleTheme }) => {\r\n  const [mobilMenuIsOpen, setMobilMenuIsOpen] = useState(false)\r\n  const toggleMobilMenuDrawer = (open) => { setMobilMenuIsOpen(open) }\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs>\r\n          <StyledTitleContainer>\r\n            <StyledIconButton size=\"small\" onClick={() => toggleMobilMenuDrawer(true)}>\r\n              <MenuIcon />\r\n            </StyledIconButton >\r\n            <StyledDrawer\r\n              variant=\"persistent\"\r\n              anchor={'left'}\r\n              open={mobilMenuIsOpen}\r\n              onClose={() => toggleMobilMenuDrawer(false)}\r\n            >\r\n              <MobileMenu\r\n                closeMenu={() => toggleMobilMenuDrawer(false)} toggleTheme={toggleTheme}\r\n              />\r\n            </StyledDrawer>\r\n            <StyledDataUsageIcon />\r\n            <StyledTitle>政府資料開放平台</StyledTitle>\r\n          </StyledTitleContainer>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item xs>\r\n            <Menu toggleTheme={toggleTheme} />\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </StyledHeader>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  toggleTheme: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { lazy, useMemo } from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport { useStore } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { menuList } from '../constants/menuList'\r\n\r\nconst StyledPageContainer = styled.div`\r\nwidth: 99%;\r\nmargin: 0 auto;\r\npadding: 4rem 0 8rem;\r\n\r\n@media (min-width: 960px) {\r\n    width: ${({ $needFullWidth }) => $needFullWidth ? '99%' : '70%'};\r\n}\r\n\r\n.page-title {\r\n    font-size: xx-large;\r\n    font-weight: bolder;\r\n    margin-bottom: 2rem;\r\n}\r\n\r\n.table-container {\r\n    margin: 1rem 0;\r\n}\r\n`\r\n\r\nexport const creatRouteList = () => {\r\n    const store = useStore()\r\n\r\n    const Holiday = lazy(() => import('../redux/holiday/reducers')\r\n        .then((reducer) => {\r\n            store.injectReducer('holiday', reducer.default)\r\n            return import('../pages/holiday')\r\n        })\r\n    )\r\n    const Weather = lazy(() => import('../redux/weather/reducers')\r\n        .then((reducer) => {\r\n            store.injectReducer('weather', reducer.default)\r\n            return import('../pages/weather')\r\n        })\r\n    )\r\n    const TaipeiSpeedCameraPositions = lazy(() => import('../redux/taipeiSpeedCameraPositions/reducers')\r\n        .then((reducer) => {\r\n            store.injectReducer('taipeiSpeedCameraPositions', reducer.default)\r\n            return import('../pages/taipeiSpeedCameraPositions')\r\n        })\r\n    )\r\n\r\n    const getPageComponents = (name) => {\r\n        switch (name) {\r\n            case 'holiday':\r\n                return <Holiday />\r\n            case 'weather':\r\n                return <Weather />\r\n            case 'taipeiSpeedCameraPositions':\r\n                return <TaipeiSpeedCameraPositions />\r\n\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n\r\n    const routeList = menuList.map((item) => (\r\n        <Route exact key={`${item.hashName}`} path={`/${item.hashName}`}>\r\n            {['taipeiSpeedCameraPositions'].includes(item.hashName)\r\n                ?\r\n                <StyledPageContainer $needFullWidth>\r\n                    {getPageComponents(item.hashName)}\r\n                </StyledPageContainer>\r\n                :\r\n                <StyledPageContainer>\r\n                    {getPageComponents(item.hashName)}\r\n                </StyledPageContainer>\r\n            }\r\n        </Route>\r\n    ))\r\n\r\n    return useMemo(() => routeList, [])\r\n}","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { Switch, Redirect } from \"react-router-dom\"\r\nimport styled from 'styled-components'\r\n\r\nimport { creatRouteList } from '../routes'\r\nimport { menuList } from '../constants/menuList'\r\n\r\nconst StyledContent = styled.div`\r\nbackground-color: ${({ theme }) => theme.mainBackground};\r\ncolor: ${({ theme }) => theme.mainText};\r\nmin-height: 100%;\r\npadding-top: 62px; /* header height */\r\nmargin-bottom: -51px; /* footer height */\r\n`\r\n\r\nconst Content = () => {\r\n    const routeList = creatRouteList()\r\n\r\n    return (\r\n        <StyledContent>\r\n            <Switch>\r\n                {routeList}\r\n                <Redirect from=\"/\" to={`/${menuList[0].hashName}`} />\r\n            </Switch>\r\n        </StyledContent>\r\n    )\r\n}\r\n\r\nContent.propTypes = {\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFooter = styled.footer`\r\nwidth: 100%;\r\nbackground-color: ${({ theme }) => theme.secondBackground};\r\ncolor: ${({ theme }) => theme.secondText};\r\npadding: 1rem;\r\nfont-size: small;\r\ntext-align: center;\r\n`\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <StyledFooter>Copyright © 2020 Roy Chen.</StyledFooter>\r\n    )\r\n}\r\n\r\nFooter.propTypes = {\r\n\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Header from './Header'\r\nimport Content from './Content'\r\nimport Footer from './Footer'\r\n\r\nconst index = ({ toggleTheme }) => {\r\n  return (\r\n    <>\r\n      <Header toggleTheme={toggleTheme} />\r\n      <Content />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nindex.propTypes = {\r\n  toggleTheme: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default index\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { MuiLoadingPage } from './components/muiCircularProgress'\r\nimport { lightTheme, darkTheme } from './webTheme'\r\nimport { GlobalStyles } from './globalStyles'\r\nimport Layout from './layout'\r\n\r\nconst App = () => {\r\n  const [webTheme, setWebTheme] = useState('dark')\r\n  const toggleTheme = () => {\r\n    if (webTheme === 'light') {\r\n      setWebTheme('dark')\r\n      window.localStorage.setItem('webTheme', 'dark')\r\n    } else {\r\n      setWebTheme('light')\r\n      window.localStorage.setItem('webTheme', 'light')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const localWebTheme = window.localStorage.getItem('webTheme')\r\n    if (localWebTheme !== webTheme) {\r\n      toggleTheme()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeProvider theme={webTheme === 'light' ? lightTheme : darkTheme}>\r\n      <GlobalStyles />\r\n      <BrowserRouter basename=\"tw-open-data\" >\r\n        <Suspense fallback={<MuiLoadingPage />}>\r\n          <div className=\"app\">\r\n            <Layout toggleTheme={toggleTheme} />\r\n          </div>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n}\r\n\r\nexport default App\r\n","export const initialState = {}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport initialReducers from './initialReducers'\r\n// import rootReducer from './reducers\r\n\r\nconst bindMiddleware = (middleware) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        return composeWithDevTools(applyMiddleware(...middleware))\r\n    }\r\n    return applyMiddleware(...middleware)\r\n}\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst staticReducers = { static: initialReducers }\r\nconst createReducer = (asyncReducers) => combineReducers({\r\n    ...staticReducers,\r\n    ...asyncReducers,\r\n})\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(\r\n        // rootReducer,\r\n        createReducer(),\r\n        initialState, bindMiddleware(middleware))\r\n\r\n    // Add a dictionary to keep track of the registered async reducers\r\n    const asyncReducers = {}\r\n\r\n    // Create an inject reducer function\r\n    // This function adds the async reducer, and creates a new combined reducer\r\n    store.injectReducer = (key, asyncReducer) => {\r\n        asyncReducers[key] = asyncReducer\r\n        store.replaceReducer(\r\n            createReducer(asyncReducers)\r\n        )\r\n    }\r\n\r\n    // Return the modified store\r\n    return store\r\n}\r\n\r\nexport default configureStore","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './assets/css/style.scss'\r\nimport App from './App'\r\nimport initStore from './redux/store'\r\n\r\nconst store = initStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst StyledCircularProgress = styled(CircularProgress)`\r\n&.MuiCircularProgress-colorPrimary{\r\n  color: ${({ theme }) => theme.highlight};\r\n}\r\n`\r\n\r\nexport const MuiCircularProgress = () => {\r\n  return (\r\n      <StyledCircularProgress />\r\n  )\r\n}\r\n\r\nMuiCircularProgress.propTypes = {\r\n\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst StyledSpinnerContainer = styled.div`\r\npadding: 15vh 0;\r\n`\r\nconst StyledCircularProgress = styled(CircularProgress)`\r\ndisplay: block !important;\r\nmargin: 0 auto;\r\n\r\n&.MuiCircularProgress-colorPrimary{\r\n  color: ${({ theme }) => theme.highlight};\r\n}\r\n`\r\n\r\nexport const MuiPageSpinner = () => {\r\n  return (\r\n    <StyledSpinnerContainer>\r\n      <StyledCircularProgress />\r\n    </StyledSpinnerContainer>\r\n  )\r\n}\r\n\r\nMuiPageSpinner.propTypes = {\r\n\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst StyledSpinnerContainer = styled.div`\r\nposition: absolute;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\n`\r\nconst StyledCircularProgress = styled(CircularProgress)`\r\ndisplay: block !important;\r\nmargin: 0 auto;\r\n\r\n&.MuiCircularProgress-colorPrimary{\r\n  color: ${({ theme }) => theme.highlight};\r\n}\r\n`\r\n\r\nexport const MuiLoadingPage = () => {\r\n  return (\r\n    <StyledSpinnerContainer>\r\n      <StyledCircularProgress />\r\n    </StyledSpinnerContainer>\r\n  )\r\n}\r\n\r\nMuiLoadingPage.propTypes = {\r\n\r\n}\r\n"],"sourceRoot":""}