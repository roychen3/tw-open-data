{"version":3,"sources":["constants/actionTypes/index.js","redux/holiday/actions.js","redux/weather/actions.js","redux/taipeiSpeedCameraPositions/actions.js","components/MuiModal.js","components/MuiLabelSelect.js","pages/weather/useWeather.js","pages/weather/MessageModal.js","pages/weather/WeatherCard.js","pages/weather/map/TaiwamMap.js","pages/weather/index.js"],"names":["GET_HOLIDAY","GET_HOLIDAY_SUCCESS","GET_HOLIDAY_FAILURE","RESET_HOLIDAY","GET_WEATHER","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","RESET_WEATHER","GET_TAIPEI_SPEED_CAMERA_POSITIONS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS","GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE","RESET_TAIPEI_SPEED_CAMERA_POSITIONS","getHoliday","payload","type","getHolidaySuccess","getHolidayFailure","getWeather","getWeatherSuccess","getWeatherFailure","resettWeather","getTaipeiSpeedCameraPositions","getTaipeiSpeedCameraPositionsSuccess","getTaipeiSpeedCameraPositionsFailure","resettTaipeiSpeedCameraPositions","StyledModalContainer","styled","div","theme","mainText","secondBackground","highlight","MuiModal","open","handaleClose","children","onClose","StyledFormControl","FormControl","secondText","StyledMenuItem","MenuItem","hover","mainBackground","MuiLabelSelect","labelId","labelText","SelectId","value","setValue","selectionItems","React","useState","setOpen","selectionMenuItemList","map","item","name","id","onOpen","onChange","event","target","useWeather","dispatch","useDispatch","weatherCountyList","useSelector","state","weather","weatherAllLocation","weatherAllLocationError","weatherAllLocationLoading","determineDayDescription","date","Date","getFullYear","getMonth","getDate","determineTimeDescription","hours","getWeatherApi","axios","get","then","resultData","allLocationData","data","cwbopendata","dataset","location","countyList","locationName","catch","err","getFakeWeatherAllLocation","fakeData","creatWeatherCardList","weatherDescriptionList","maximumTemperatureList","minimumTemperatureList","probabilityOfPrecipitationList","weatherElement","forEach","elementName","push","time","weatherCardList","index","weatherDescriptionName","parameter","parameterName","weatherDescriptionCode","parameterValue","startTime","endTime","weatherPeriodTime","getHours","unit","parameterUnit","maximumTemperature","minimumTemperature","probabilityOfPrecipitation","propTypes","StyledIcon","MessageModal","fontSize","href","StyledCard","Card","StyledCardContent","CardContent","StyledPeriodTime","StyledDescriptionName","StyledTemperature","StyledProbabilityOfPrecipitation","StyledProbabilityOfPrecipitationText","WeatherCard","variant","StyledMap","TaiwamMap","selectedCounty","setCounty","mapRef","useRef","useEffect","projection","d3","center","scale","path","current","attr","selectAll","taiwanCounty","features","enter","append","countyInfo","properties","COUNTYNAME","on","countyPathElement","document","querySelector","classList","remove","add","ref","StyledForeachContainer","StyledCardListContainer","setSelectedCounty","setWeatherCardList","messageModalIsOpen","setMessageModalIsOpen","length","selectedWeatherData","find","showWeatherCardList","className","Hidden","xsDown"],"mappings":"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","file":"static/js/5.85b8074f.chunk.js","sourcesContent":["// === holiday ===\r\nexport const GET_HOLIDAY = 'GET_HOLIDAY'\r\nexport const GET_HOLIDAY_SUCCESS = 'GET_HOLIDAY_SUCCESS'\r\nexport const GET_HOLIDAY_FAILURE = 'GET_HOLIDAY_FAILURE'\r\nexport const RESET_HOLIDAY = 'RESET_HOLIDAY'\r\n\r\n// === weather ===\r\nexport const GET_WEATHER = 'GET_WEATHER'\r\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS'\r\nexport const GET_WEATHER_FAILURE = 'GET_WEATHER_FAILURE'\r\nexport const RESET_WEATHER = 'RESET_WEATHER'\r\n\r\n// === taipei speed camera position ===\r\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS'\r\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS'\r\nexport const GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE = 'GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE'\r\nexport const RESET_TAIPEI_SPEED_CAMERA_POSITIONS = 'RESET_TAIPEI_SPEED_CAMERA_POSITIONS'\r\n","import {\r\n    GET_HOLIDAY,\r\n    GET_HOLIDAY_SUCCESS,\r\n    GET_HOLIDAY_FAILURE,\r\n    RESET_HOLIDAY,\r\n} from '../../constants/actionTypes'\r\n\r\nexport const getHoliday = (payload) => ({\r\n    type: GET_HOLIDAY,\r\n    payload,\r\n})\r\n\r\nexport const getHolidaySuccess = (payload) => ({\r\n    type: GET_HOLIDAY_SUCCESS,\r\n    payload,\r\n})\r\n\r\nexport const getHolidayFailure = (payload) => ({\r\n    type: GET_HOLIDAY_FAILURE,\r\n    payload,\r\n})\r\n\r\nexport const resetHoliday = (payload) => ({\r\n    type: RESET_HOLIDAY,\r\n    payload,\r\n})","import {\r\n    GET_WEATHER,\r\n    GET_WEATHER_SUCCESS,\r\n    GET_WEATHER_FAILURE,\r\n    RESET_WEATHER,\r\n} from '../../constants/actionTypes'\r\n\r\nexport const getWeather = (payload) => ({\r\n    type: GET_WEATHER,\r\n    payload,\r\n})\r\n\r\nexport const getWeatherSuccess = (payload) => ({\r\n    type: GET_WEATHER_SUCCESS,\r\n    payload,\r\n})\r\n\r\nexport const getWeatherFailure = (payload) => ({\r\n    type: GET_WEATHER_FAILURE,\r\n    payload,\r\n})\r\n\r\nexport const resettWeather = (payload) => ({\r\n    type: RESET_WEATHER,\r\n    payload,\r\n})","import {\r\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS,\r\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\r\n    GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\r\n    RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\r\n} from '../../constants/actionTypes'\r\n\r\nexport const getTaipeiSpeedCameraPositions = (payload) => ({\r\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS,\r\n    payload,\r\n})\r\n\r\nexport const getTaipeiSpeedCameraPositionsSuccess = (payload) => ({\r\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_SUCCESS,\r\n    payload,\r\n})\r\n\r\nexport const getTaipeiSpeedCameraPositionsFailure = (payload) => ({\r\n    type: GET_TAIPEI_SPEED_CAMERA_POSITIONS_FAILURE,\r\n    payload,\r\n})\r\n\r\nexport const resettTaipeiSpeedCameraPositions = (payload) => ({\r\n    type: RESET_TAIPEI_SPEED_CAMERA_POSITIONS,\r\n    payload,\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nconst StyledModalContainer = styled.div`\r\nposition: absolute;\r\nwidth: 90%;\r\n@media (min-width: 600px){\r\n  width: 50%;\r\n}\r\ntext-align: center;\r\ncolor: ${({ theme }) => theme.mainText};\r\nbackground-color: ${({ theme }) => theme.secondBackground};\r\nborder: 2px solid ${({ theme }) => theme.highlight};\r\npadding: 2rem 1rem;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\n`\r\n\r\nconst MuiModal = ({\r\n  open,\r\n  handaleClose,\r\n  children,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handaleClose}\r\n    >\r\n      <StyledModalContainer>\r\n        {children}\r\n      </StyledModalContainer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nMuiModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  handaleClose: PropTypes.func.isRequired,\r\n  children: PropTypes.instanceOf(Object).isRequired,\r\n}\r\n\r\nexport default MuiModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\nmargin: 0.5rem !important;\r\nmin-width 70px !important;\r\n\r\n.MuiInput-underline:after {\r\n    border-bottom: 1px solid ${({ theme }) => theme.highlight};\r\n}\r\n.MuiInput-underline::before {\r\n    border-bottom: 1px solid ${({ theme }) => theme.secondText};\r\n}\r\n&:hover {\r\n    .MuiInputLabel-root {\r\n        color: ${({ theme }) => theme.highlight};\r\n    }\r\n    .MuiInput-underline::before {\r\n        border-bottom: 1px solid ${({ theme }) => theme.highlight} !important;\r\n    }\r\n}\r\n\r\n.MuiFormLabel-root {\r\n    color: ${({ theme }) => theme.secondText};\r\n}\r\n.MuiFormLabel-root.Mui-focused {\r\n    color: ${({ theme }) => theme.highlight};\r\n}\r\n\r\n.MuiSelect-root {\r\n    color: ${({ theme }) => theme.mainText};\r\n    border-bottom: 1px solid ${({ theme }) => theme.secondText};\r\n}\r\n.MuiSelect-icon {\r\n    color: ${({ theme }) => theme.secondText};\r\n}\r\n`\r\nconst StyledMenuItem = styled(MenuItem)`\r\ncolor: ${({ theme }) => theme.secondText} !important;\r\nbackground-color: ${({ theme }) => theme.secondBackground} !important;\r\n:hover {\r\n    background-color: ${({ theme }) => theme.hover} !important;\r\n}\r\n\r\n&.Mui-selected {\r\n    color: ${({ theme }) => theme.highlight} !important;\r\n    background-color: ${({ theme }) => theme.mainBackground} !important;\r\n\r\n    :hover {\r\n        background-color: ${({ theme }) => theme.hover} !important;\r\n    }\r\n}\r\n`\r\n\r\nconst MuiLabelSelect = ({\r\n    labelId,\r\n    labelText,\r\n    SelectId,\r\n    value,\r\n    setValue,\r\n    selectionItems,\r\n}) => {\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const selectionMenuItemList = selectionItems.map((item) => (\r\n        <StyledMenuItem key={item.value} value={item.value}>{item.name}</StyledMenuItem>))\r\n\r\n    return (\r\n        <StyledFormControl>\r\n            <InputLabel id={labelId}>{labelText}</InputLabel>\r\n            <Select\r\n                labelId=\"year-select-label\"\r\n                id={SelectId}\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                {selectionMenuItemList}\r\n            </Select>\r\n        </StyledFormControl>\r\n    )\r\n}\r\n\r\nMuiLabelSelect.propTypes = {\r\n    labelId: PropTypes.string.isRequired,\r\n    labelText: PropTypes.string.isRequired,\r\n    SelectId: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    setValue: PropTypes.func.isRequired,\r\n    selectionItems: PropTypes.instanceOf(Array).isRequired,\r\n}\r\n\r\nexport default MuiLabelSelect\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n    getWeather,\r\n    getWeatherSuccess,\r\n    getWeatherFailure,\r\n} from '../../redux/actions'\r\nimport fakeData from './fakeData.json'\r\n\r\nconst useWeather = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const weatherCountyList = useSelector((state) => state.weather.weatherCountyList)\r\n    const weatherAllLocation = useSelector((state) => state.weather.weatherAllLocation)\r\n    const weatherAllLocationError = useSelector((state) => state.weather.weatherAllLocationError)\r\n    const weatherAllLocationLoading = useSelector((state) => state.weather.weatherAllLocationLoading)\r\n\r\n    const determineDayDescription = (date) => {\r\n        const determineDate = new Date(date.getFullYear(), date.getMonth(), date.getDate())\r\n        const currentDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n\r\n        const diffTime = determineDate - currentDate\r\n        const diffDays = diffTime / (1000 * 60 * 60 * 24)\r\n\r\n        switch (diffDays) {\r\n            case -2:\r\n                return '前天'\r\n            case -1:\r\n                return '昨天'\r\n            case 0:\r\n                return '今天'\r\n            case 1:\r\n                return '明天'\r\n            case 2:\r\n                return '後天'\r\n\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const determineTimeDescription = (hours) => {\r\n        const midnightTime = 0\r\n        const morningTime = 6\r\n        const noonTime = 12\r\n        const eveningTime = 18\r\n\r\n        if (morningTime <= hours && hours < noonTime) {\r\n            return '早上'\r\n        } else if (noonTime <= hours && hours < eveningTime) {\r\n            return '下午'\r\n        } else if (eveningTime <= hours) {\r\n            return '晚上'\r\n        } else if (midnightTime <= hours && hours < morningTime) {\r\n            return '凌晨'\r\n        }\r\n    }\r\n\r\n    const creatWeatherCardList = (data) => {\r\n        const weatherDescriptionList = []\r\n        const maximumTemperatureList = []\r\n        const minimumTemperatureList = []\r\n        const probabilityOfPrecipitationList = []\r\n        data.weatherElement.forEach((item) => {\r\n            switch (item.elementName) {\r\n                case 'Wx':\r\n                    weatherDescriptionList.push(...item.time)\r\n                    break\r\n\r\n                case 'MaxT':\r\n                    maximumTemperatureList.push(...item.time)\r\n                    break\r\n\r\n                case 'MinT':\r\n                    minimumTemperatureList.push(...item.time)\r\n                    break\r\n\r\n                case 'PoP':\r\n                    probabilityOfPrecipitationList.push(...item.time)\r\n                    break\r\n\r\n                default:\r\n                    break\r\n            }\r\n        })\r\n\r\n        const weatherCardList = [{}, {}, {}]\r\n\r\n        weatherDescriptionList.forEach((item, index) => {\r\n            const weatherDescriptionName = item.parameter.parameterName\r\n            const weatherDescriptionCode = item.parameter.parameterValue\r\n            weatherCardList[index].weatherDescriptionName = weatherDescriptionName\r\n            weatherCardList[index].weatherDescriptionCode = weatherDescriptionCode\r\n\r\n            const startTime = new Date(item.startTime)\r\n            const endTime = new Date(item.endTime)\r\n            const weatherPeriodTime = `${determineDayDescription(startTime)}${determineTimeDescription(startTime.getHours())} 至 ${determineDayDescription(endTime)}${determineTimeDescription(endTime.getHours())}`\r\n            weatherCardList[index].weatherPeriodTime = weatherPeriodTime\r\n        })\r\n\r\n        maximumTemperatureList.forEach((item, index) => {\r\n            const value = item.parameter.parameterName\r\n            const unit = item.parameter.parameterUnit === 'C' ? '°C' : '°F'\r\n            weatherCardList[index].maximumTemperature = `${value}${unit}`\r\n        })\r\n\r\n        minimumTemperatureList.forEach((item, index) => {\r\n            const value = item.parameter.parameterName\r\n            const unit = item.parameter.parameterUnit === 'C' ? '°C' : '°F'\r\n            weatherCardList[index].minimumTemperature = `${value}${unit}`\r\n        })\r\n\r\n        probabilityOfPrecipitationList.forEach((item, index) => {\r\n            const value = item.parameter.parameterName\r\n            const unit = item.parameter.parameterUnit === '百分比' ? '%' : ''\r\n            weatherCardList[index].probabilityOfPrecipitation = `${value}${unit}`\r\n        })\r\n\r\n        return weatherCardList\r\n    }\r\n\r\n    const getWeatherApi = () => {\r\n        dispatch(getWeather())\r\n\r\n        axios.get('https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON')\r\n            .then((resultData) => {\r\n                const allLocationData = resultData.data.cwbopendata.dataset.location\r\n                const countyList = allLocationData.map((item) => ({ value: item.locationName, name: item.locationName }))\r\n                dispatch(getWeatherSuccess({\r\n                    weatherCountyList: countyList,\r\n                    weatherAllLocation: allLocationData,\r\n                }))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(getWeatherFailure(err))\r\n            })\r\n    }\r\n\r\n    const getFakeWeatherAllLocation = () => {\r\n        const allLocationData = fakeData.cwbopendata.dataset.location\r\n        const countyList = allLocationData.map((item) => ({ value: item.locationName, name: item.locationName }))\r\n        dispatch(getWeatherSuccess({\r\n            weatherCountyList: countyList,\r\n            weatherAllLocation: allLocationData,\r\n        }))\r\n    }\r\n\r\n    return {\r\n        weatherCountyList,\r\n        weatherAllLocation,\r\n        weatherAllLocationError,\r\n        weatherAllLocationLoading,\r\n        getWeatherApi,\r\n        getFakeWeatherAllLocation,\r\n        determineDayDescription,\r\n        determineTimeDescription,\r\n        creatWeatherCardList\r\n    }\r\n}\r\n\r\nuseWeather.propTypes = {\r\n\r\n}\r\n\r\nexport default useWeather","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\n\r\nconst StyledIcon = styled.div`\r\ncolor: ${({ theme }) => theme.highlight};\r\n`\r\n\r\nconst MessageModal = () => {\r\n  return (\r\n    <div>\r\n      <StyledIcon>\r\n        <ErrorIcon fontSize=\"large\" />\r\n      </StyledIcon>\r\n      <p>API 網址發生錯誤，呈現資料為開發用假資料。</p>\r\n      <br />\r\n      <p>資料來源: <a href=\"https://data.gov.tw/dataset/6069\">政府資料開放平臺</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nMessageModal.propTypes = {\r\n\r\n}\r\n\r\nexport default MessageModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess'\r\n\r\nconst StyledCard = styled(Card)`\r\ncolor: ${({ theme }) => theme.mainText} !important;\r\nbackground-color: ${({ theme }) => theme.secondBackground} !important;\r\nmargin: 3px;\r\nmin-width: 160px;\r\nmin-height: 200px;\r\n\r\n@media (min-width: 600px) {\r\n    max-width: 160px;\r\n    max-height: 200px;\r\n}\r\n`\r\nconst StyledCardContent = styled(CardContent)`\r\ntext-align: center;\r\npadding: 1rem !important;\r\n`\r\nconst StyledPeriodTime = styled.div`\r\nfont-size: small;\r\nmargin-top: 1rem;\r\n`\r\nconst StyledDescriptionName = styled.div`\r\nfont-size: small;\r\nmargin: 3rem 0;\r\n@media (min-width: 600px) {\r\n    margin: 1rem 0;\r\n}\r\n`\r\nconst StyledTemperature = styled.div`\r\nmargin: 2rem 0;\r\n@media (min-width: 600px) {\r\n    margin: 1rem 0;\r\n}\r\n`\r\nconst StyledProbabilityOfPrecipitation = styled.div`\r\nmargin-bottom: 1rem;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\nconst StyledProbabilityOfPrecipitationText = styled.div`\r\nmargin-left: 1rem\r\n`\r\n\r\nconst WeatherCard = ({ data }) => {\r\n    return (\r\n        <StyledCard variant=\"outlined\">\r\n            <StyledCardContent>\r\n                <StyledPeriodTime>\r\n                    {data.weatherPeriodTime}\r\n                </StyledPeriodTime>\r\n                <StyledDescriptionName>\r\n                    {data.weatherDescriptionName}\r\n                </StyledDescriptionName>\r\n                <StyledTemperature>\r\n                    {`${data.maximumTemperature} - ${data.minimumTemperature}`}\r\n                </StyledTemperature>\r\n                <StyledProbabilityOfPrecipitation>\r\n                    <BeachAccessIcon />\r\n                    <StyledProbabilityOfPrecipitationText>\r\n                        {data.probabilityOfPrecipitation}\r\n                    </StyledProbabilityOfPrecipitationText>\r\n                </StyledProbabilityOfPrecipitation>\r\n            </StyledCardContent>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nWeatherCard.propTypes = {\r\n    data: PropTypes.instanceOf(Object).isRequired\r\n}\r\n\r\nexport default WeatherCard\r\n","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport * as d3 from 'd3'\r\nimport styled from 'styled-components'\r\n\r\nimport taiwanCounty from './taiwan-county.json'\r\n\r\nconst StyledMap = styled.div`\r\nflex-grow: 2;\r\n\r\nsvg#taiwan-map{\r\n    width: 400px;\r\n    height: 500px;\r\n}\r\n\r\nsvg#taiwan-map path {\r\n    fill: transparent;\r\n    stroke: ${({ theme }) => theme.mainText};\r\n    cursor: pointer;\r\n    transition: fill .2s ease, stroke .2s ease, transform .2s ease;\r\n}\r\n\r\nsvg#taiwan-map path:hover, \r\nsvg#taiwan-map path.active {\r\n    fill: ${({ theme }) => theme.highlight};\r\n    stroke: ${({ theme }) => theme.mainBackground};\r\n    transform: translateY(-5px);\r\n}\r\n\r\n@media (min-width: 600px) {\r\n    text-align: center;\r\n}\r\n@media (min-width: 960px){\r\n    text-align: start;\r\n}\r\n`\r\n\r\nconst TaiwamMap = ({ selectedCounty, setCounty }) => {\r\n    const mapRef = useRef()\r\n\r\n    useEffect(() => {\r\n        // 判斷螢幕寬度，給不同放大值\r\n        let mercatorScale = 14000\r\n\r\n        // d3：svg path 產生器\r\n        const projection = d3.geoMercator()\r\n            .center([121.2, 24.2])\r\n            .scale(mercatorScale)\r\n        // .translate([50%, 50%])\r\n\r\n        var path = d3.geoPath(projection)\r\n\r\n        // 讓d3抓svg，並寫入寬高\r\n        var svg = d3.select(mapRef.current)\r\n            .attr('viewBox', '0 0 800 800')\r\n\r\n        svg.selectAll('path')\r\n            .data(taiwanCounty.features)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', path)\r\n            .attr('id', (countyInfo) => {\r\n                // 設定id，為了click時加class用\r\n                return countyInfo.properties.COUNTYNAME\r\n            })\r\n            .on('click', (countyPathElement) => {\r\n                setCounty(countyPathElement.target.id)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // 有 .active 存在，就移除 .active\r\n        if (document.querySelector('#taiwan-map .active')) {\r\n            document.querySelector('#taiwan-map .active').classList.remove('active')\r\n        }\r\n        // 被點擊的縣市加上 .active\r\n        document.querySelector(`#taiwan-map #${selectedCounty}`).classList.add('active')\r\n    }, [selectedCounty])\r\n\r\n    return (\r\n        <StyledMap>\r\n            <svg ref={mapRef} id=\"taiwan-map\" ></svg>\r\n        </StyledMap>\r\n    )\r\n}\r\n\r\nTaiwamMap.propTypes = {\r\n    selectedCounty: PropTypes.string.isRequired,\r\n    setCounty: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TaiwamMap\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n    resettWeather,\r\n} from '../../redux/actions'\r\n\r\nimport { MuiPageSpinner } from '../../components/muiCircularProgress'\r\nimport MuiLabelSelect from '../../components/MuiLabelSelect'\r\nimport MuiModal from '../../components/MuiModal'\r\n\r\nimport useWeather from './useWeather'\r\nimport MessageModal from './MessageModal'\r\nimport WeatherCard from './WeatherCard'\r\n\r\nimport TaiwamMap from './map/TaiwamMap'\r\n\r\nconst StyledForeachContainer = styled.div`\r\ndisplay: flex;\r\n\r\n@media (min-width: 600px) {\r\n    flex-direction: column;\r\n}\r\n@media (min-width: 960px){\r\n    flex-direction: row;\r\n`\r\nconst StyledCardListContainer = styled.div`\r\nflex-grow: 1;\r\nmargin: 2rem 0;\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n@media (min-width: 600px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n}\r\n@media (min-width: 960px){\r\n    flex-wrap: wrap;\r\n    justify-content: start;\r\n    align-content: start;\r\n}\r\n`\r\n\r\nconst index = () => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        weatherCountyList,\r\n        weatherAllLocation,\r\n        weatherAllLocationLoading,\r\n        weatherAllLocationError,\r\n        getWeatherApi,\r\n        getFakeWeatherAllLocation,\r\n        creatWeatherCardList,\r\n    } = useWeather()\r\n\r\n    const [selectedCounty, setSelectedCounty] = useState('')\r\n    const [weatherCardList, setWeatherCardList] = useState([])\r\n    const [messageModalIsOpen, setMessageModalIsOpen] = useState(false)\r\n\r\n    const handaleMessageModalOpen = () => { setMessageModalIsOpen(true) }\r\n    const handaleMessageModalClose = () => { setMessageModalIsOpen(false) }\r\n\r\n    useEffect(() => {\r\n        if (weatherCountyList.length > 0) setSelectedCounty(weatherCountyList[0].value)\r\n    }, [weatherCountyList])\r\n\r\n    useEffect(() => {\r\n        if (selectedCounty && weatherAllLocation.length > 0) {\r\n            const selectedWeatherData = weatherAllLocation.find((item) => item.locationName === selectedCounty)\r\n            setWeatherCardList(creatWeatherCardList(selectedWeatherData))\r\n        }\r\n    }, [selectedCounty, weatherAllLocation])\r\n\r\n    useEffect(() => {\r\n        getWeatherApi()\r\n\r\n        return () => {\r\n            dispatch(resettWeather())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (weatherAllLocationError !== null) {\r\n            handaleMessageModalOpen()\r\n            getFakeWeatherAllLocation()\r\n        }\r\n    }, [weatherAllLocationError])\r\n\r\n    const showWeatherCardList = weatherCardList.map((item, index) => <WeatherCard key={index} data={item} />)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-title\">天氣預報</div>\r\n            {weatherAllLocationLoading &&\r\n                <MuiPageSpinner />\r\n            }\r\n            <MuiLabelSelect\r\n                labelId=\"county-select-label\"\r\n                labelText=\"county\"\r\n                SelectId=\"county-select\"\r\n                value={selectedCounty}\r\n                setValue={setSelectedCounty}\r\n                selectionItems={weatherCountyList}\r\n            />\r\n            {weatherAllLocationLoading === false && weatherCardList.length > 0 &&\r\n                <StyledForeachContainer>\r\n                    <StyledCardListContainer>\r\n                        {showWeatherCardList}\r\n                    </StyledCardListContainer>\r\n                    <Hidden xsDown>\r\n                        <TaiwamMap selectedCounty={selectedCounty} setCounty={setSelectedCounty} />\r\n                    </Hidden>\r\n                </StyledForeachContainer>\r\n            }\r\n            <MuiModal\r\n                open={messageModalIsOpen}\r\n                handaleClose={handaleMessageModalClose}\r\n            >\r\n                <MessageModal />\r\n            </MuiModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nindex.propTypes = {\r\n\r\n}\r\n\r\nexport default index\r\n"],"sourceRoot":""}