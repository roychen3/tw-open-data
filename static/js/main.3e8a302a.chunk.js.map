{"version":3,"sources":["styles/webTheme.js","styles/muiTheme.js","styles/globalStyles.js","components/MuiSwitchToggleTheme.js","components/Menu.js","constants/menuList.js","components/MobileMenu.js","layout/Header.js","routes/index.js","layout/Content.js","layout/Footer.js","layout/index.js","App.js","redux/initialReducers.js","redux/store.js","index.js","components/muiCircularProgress/MuiCircularProgress.js","components/muiCircularProgress/MuiPageSpinner.js","components/muiCircularProgress/MuiLoadingPage.js"],"names":["lightTheme","themeName","hover","highlight","mainText","secondText","mainBackground","secondBackground","error","darkTheme","createTheme","palette","type","primary","main","lightWebTheme","secondary","text","icon","divider","background","paper","default","action","darkWebTheme","GlobalStyles","createGlobalStyle","theme","StyledSwitch","styled","Switch","MuiSwitchToggleTheme","toggleTheme","localWebTheme","window","localStorage","getItem","checked","color","size","onChange","StyledMenuContainer","div","StyledIconButton","IconButton","StyledToggleThemeContainer","Menu","href","target","rel","menuList","hashName","itemName","StyledListItem","ListItem","ListItemLink","to","closeMenu","forwardRefLink","itemProps","ref","renderLink","useMemo","forwardRef","button","component","onClick","ListItemIcon","ListItemText","StyledMobileMenuContainer","StyledMobileMenuClose","StyledDivider","Divider","StyledListItemToggleTheme","MobileMenu","linkList","map","item","List","Hidden","smUp","StyledHeader","header","StyledTitleContainer","StyledTitle","StyledDataUsageIcon","DataUsageIcon","StyledDrawer","Drawer","Header","useState","mobilMenuIsOpen","setMobilMenuIsOpen","toggleMobilMenuDrawer","open","Grid","container","spacing","xs","variant","anchor","onClose","xsDown","StyledPageContainer","$needFullWidth","StyledContent","Content","routeList","store","useStore","Holiday","lazy","then","reducer","injectReducer","Weather","TaipeiSpeedCameraPositions","getPageComponents","name","exact","path","includes","creatRouteList","from","StyledFooter","footer","Footer","index","App","webTheme","setWebTheme","setItem","useEffect","muiLightTheme","muiDarkTheme","fallback","className","initialState","state","middleware","thunk","staticReducers","static","initialReducers","createReducer","asyncReducers","combineReducers","createStore","applyMiddleware","key","asyncReducer","replaceReducer","initStore","ReactDOM","render","document","getElementById","CircularProgress","StyledSpinnerContainer","StyledCircularProgress","MuiPageSpinner","MuiLoadingPage"],"mappings":"6OAAaA,EAAa,CACxBC,UAAW,QACXC,MAAO,UACPC,UAAW,UACXC,SAAU,UACVC,WAAY,UACZC,eAAgB,WAChBC,iBAAkB,UAClBC,MAAO,WAGIC,EAAY,CACvBR,UAAW,OACXC,MAAO,UACPC,UAAW,UACXC,SAAU,UACVC,WAAY,UACZC,eAAgB,UAChBC,iBAAkB,UAClBC,MAAO,W,QCbIR,EAAaU,YAAY,CACpCC,QAAS,CACPC,KAAM,QACNC,QAAS,CAAEC,KAAMC,EAAcZ,WAC/Ba,UAAW,CAAEF,KAAMC,EAAcV,YACjCG,MAAO,CAAEM,KAAMC,EAAcP,OAC7BS,KAAM,CACJJ,QAASE,EAAcX,SACvBY,UAAWD,EAAcV,WACzBa,KAAMH,EAAcX,UAEtBe,QAASJ,EAAcR,iBACvBa,WAAY,CACVC,MAAON,EAAcR,iBACrBe,QAASP,EAAcT,gBAEzBiB,OAAQ,CACNrB,MAAOa,EAAcb,UAKdO,EAAYC,YAAY,CACnCC,QAAS,CACPC,KAAM,OACNC,QAAS,CAAEC,KAAMU,EAAarB,WAC9Ba,UAAW,CAAEF,KAAMU,EAAanB,YAChCG,MAAO,CAAEM,KAAMU,EAAahB,OAC5BS,KAAM,CACJJ,QAASW,EAAapB,SACtBY,UAAWQ,EAAanB,WACxBa,KAAMM,EAAapB,UAErBe,QAASK,EAAajB,iBACtBa,WAAY,CACVC,MAAOG,EAAajB,iBACpBe,QAASE,EAAalB,gBAExBiB,OAAQ,CACNrB,MAAOsB,EAAatB,U,odC3CnB,IAAMuB,EAAeC,YAAH,KAiBd,qBAAGC,MAAkBvB,YACV,qBAAGuB,MAAkBrB,kBAKhC,qBAAGqB,MAAkBvB,YAGnB,qBAAGuB,MAAkBxB,a,uMCrBlC,IAAMyB,EAAeC,YAAOC,IAAPD,CAAH,KAuBHE,EArBc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACxBC,EAAgBC,OAAOC,aAAaC,QAAQ,YAElD,OACE,qCACE,cAAC,IAAD,IACA,cAACR,EAAD,CACES,QAA2B,UAAlBJ,EACTK,MAAM,UACNC,KAAK,QACLC,SAAUR,IAEZ,cAAC,IAAD,Q,kmBCZN,IAAMS,EAAsBZ,IAAOa,IAAV,KAenBC,EAAmBd,YAAOe,IAAPf,CAAH,KACX,qBAAGF,MAAkBvB,YAOnB,qBAAGuB,MAAkBxB,aAI5B0C,EAA6BhB,IAAOa,IAAV,KA0BjBI,EArBF,SAAC,GAAqB,IAAnBd,EAAkB,EAAlBA,YACd,OACE,eAACS,EAAD,WACE,cAACE,EAAD,CACEI,KAAK,8BACLC,OAAO,SACPC,IAAI,sBAHN,SAKE,cAAC,IAAD,MAEF,cAACJ,EAAD,UACE,cAAC,EAAD,CAAsBb,YAAaA,U,kIChD9BkB,GAAW,CACpB,CACIC,SAAU,UACVC,SAAU,2BACVlC,KAAM,cAAC,KAAD,KAEV,CACIiC,SAAU,UACVC,SAAU,2BACVlC,KAAM,cAAC,KAAD,KAEV,CACIiC,SAAU,6BACVC,SAAU,qEACVlC,KAAM,cAAC,KAAD,M,i1BCCd,IAAMmC,GAAiBxB,YAAOyB,IAAPzB,CAAH,MAEP,qBAAGF,MAAkBvB,YAInB,qBAAGuB,MAAkBxB,aAK9BoD,GAAe,SAAC,GAAsC,IAApCrC,EAAmC,EAAnCA,KAAML,EAA6B,EAA7BA,QAAS2C,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,UACnCC,EAAiB,SAACC,EAAWC,GAAZ,OACrB,cAAC,IAAD,aAAYJ,GAAIA,EAAII,IAAKA,GAASD,KAG9BE,EAAaC,mBAAQ,kBAAMC,qBAAWL,KAAiB,CAACF,IAE9D,OACE,6BACE,eAACH,GAAD,CAAgBW,QAAM,EAACC,UAAWJ,EAAYK,QAAST,EAAvD,UACGvC,EAAO,cAACiD,EAAA,EAAD,UAAejD,IAAuB,KAC9C,cAACkD,EAAA,EAAD,CAAcvD,QAASA,UAazBwD,GAA4BxC,IAAOa,IAAV,MAGzB4B,GAAwBzC,IAAOa,IAAV,MAMrBC,GAAmBd,YAAOe,IAAPf,CAAH,MACX,qBAAGF,MAAkBvB,YAGnB,qBAAGuB,MAAkBxB,aAG5BoE,GAAgB1C,YAAO2C,IAAP3C,CAAH,MACG,qBAAGF,MAAkBrB,kBAErCmE,GAA4B5C,YAAOyB,IAAPzB,CAAH,MAwDhB6C,GApDI,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,UAAWzB,EAAkB,EAAlBA,YACzB2C,EAAWzB,GAAS0B,KAAI,SAACC,GAAD,OAC5B,cAAC,GAAD,CAEErB,GAAE,WAAMqB,EAAK1B,UACbtC,QAASgE,EAAKzB,SACdlC,KAAM2D,EAAK3D,KACXuC,UAAWA,GAJNoB,EAAK1B,aAQd,OACE,eAACkB,GAAD,WACE,cAACC,GAAD,UACE,cAAC,GAAD,CAAkB/B,KAAK,QAAQ2B,QAAST,EAAxC,SACE,cAAC,IAAD,QAGJ,cAACc,GAAD,IACA,cAACO,EAAA,EAAD,UAAOH,IACP,eAACI,EAAA,EAAD,CAAQC,MAAI,EAAZ,UACE,cAACT,GAAD,IACA,cAACO,EAAA,EAAD,UACE,eAACzB,GAAD,CACEW,QAAM,EACNC,UAAU,IACVlB,KAAK,8BACLC,OAAO,SACPC,IAAI,sBALN,UAOE,cAACkB,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcvD,QAAQ,gBAG1B,cAAC0D,GAAD,IACA,cAACO,EAAA,EAAD,UACE,cAACL,GAAD,UACE,cAAC,EAAD,CAAsBzC,YAAaA,e,47BCtG/C,IAAMiD,GAAepD,IAAOqD,OAAV,MAGI,qBAAGvD,MAAkBpB,oBAIrC4E,GAAuBtD,IAAOa,IAAV,MAMpB0C,GAAcvD,IAAOa,IAAV,MAKXC,GAAmBd,YAAOe,IAAPf,CAAH,MAEX,qBAAGF,MAAkBvB,YAGnB,qBAAGuB,MAAkBxB,aAG5BkF,GAAsBxD,YAAOyD,IAAPzD,CAAH,MAEd,qBAAGF,MAAkBxB,aAE1BoF,GAAe1D,YAAO2D,IAAP3D,CAAH,MAEM,qBAAGF,MAAkBpB,oBACF,qBAAGoB,MAAkBzB,SAmDjDuF,GA9CA,SAAC,GAAqB,IAAnBzD,EAAkB,EAAlBA,YAAkB,EACY0D,oBAAS,GADrB,mBAC3BC,EAD2B,KACVC,EADU,KAE5BC,EAAwB,SAACC,GAC7BF,EAAmBE,IAGrB,OACE,cAACb,GAAD,UACE,eAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMlB,MAAI,EAACqB,IAAE,EAAb,SACE,eAACf,GAAD,WACE,cAAC,GAAD,CACE5C,KAAK,QACL2B,QAAS,kBAAM2B,GAAsB,IAFvC,SAIE,cAAC,IAAD,MAEF,cAACN,GAAD,CACEY,QAAQ,aACRC,OAAQ,OACRN,KAAMH,EACNU,QAAS,kBAAMR,GAAsB,IAJvC,SAME,cAAC,GAAD,CACEpC,UAAW,kBAAMoC,GAAsB,IACvC7D,YAAaA,MAGjB,cAACqD,GAAD,IACA,cAACD,GAAD,oEAGJ,cAACL,EAAA,EAAD,CAAQuB,QAAM,EAAd,SACE,cAACP,EAAA,EAAD,CAAMlB,MAAI,EAACqB,IAAE,EAAb,SACE,cAAC,EAAD,CAAMlE,YAAaA,c,4VC/E/B,IAAMuE,GAAsB1E,IAAOa,IAAV,MAMZ,qBAAG8D,eAAuC,MAAQ,S,qLCL/D,IAAMC,GAAgB5E,IAAOa,IAAV,MAqBJgE,GAfC,WACd,IAAMC,EDYsB,WAC5B,IAAMC,EAAQC,cAERC,EAAUC,gBAAK,kBACnB,8BAAoCC,MAAK,SAACC,GAExC,OADAL,EAAMM,cAAc,UAAWD,EAAQ3F,SAChC,0DAGL6F,EAAUJ,gBAAK,kBACnB,+BAAoCC,MAAK,SAACC,GAExC,OADAL,EAAMM,cAAc,UAAWD,EAAQ3F,SAChC,iEAGL8F,EAA6BL,gBAAK,kBACtC,+BAAuDC,MAAK,SAACC,GAE3D,OADAL,EAAMM,cAAc,6BAA8BD,EAAQ3F,SACnD,iEAIL+F,EAAoB,SAACC,GACzB,OAAQA,GACN,IAAK,UACH,OAAO,cAACR,EAAD,IACT,IAAK,UACH,OAAO,cAACK,EAAD,IACT,IAAK,6BACH,OAAO,cAACC,EAAD,IAET,QACE,OAAO,+BAIPT,EAAYzD,GAAS0B,KAAI,SAACC,GAAD,OAC7B,cAAC,KAAD,CAAO0C,OAAK,EAA0BC,KAAI,WAAM3C,EAAK1B,UAArD,SACG,CAAC,8BAA8BsE,SAAS5C,EAAK1B,UAC5C,cAACoD,GAAD,CAAqBC,gBAAc,EAAnC,SACGa,EAAkBxC,EAAK1B,YAG1B,cAACoD,GAAD,UACGc,EAAkBxC,EAAK1B,aAP9B,UAAqB0B,EAAK1B,cAa5B,OAAOW,mBAAQ,kBAAM6C,IAAW,IC9Dde,GAElB,OACE,cAACjB,GAAD,UACE,eAAC,KAAD,WACGE,EACD,cAAC,KAAD,CAAUgB,KAAK,IAAInE,GAAE,WAAMN,GAAS,GAAGC,kB,oLClB/C,IAAMyE,GAAe/F,IAAOgG,OAAV,MAEE,qBAAGlG,MAAkBpB,oBAChC,qBAAGoB,MAAkBtB,cAgBfyH,GAVA,WACX,OACI,cAACF,GAAD,6CCOOG,GAdD,SAAC,GAAqB,IAAnB/F,EAAkB,EAAlBA,YACf,OACE,qCACE,cAAC,GAAD,CAAQA,YAAaA,IACrB,cAAC,GAAD,IACA,cAAC,GAAD,QC0CSgG,GAvCH,WAAO,IAAD,EACgBtC,mBAAS,QADzB,mBACTuC,EADS,KACCC,EADD,KAEVlG,EAAc,WACD,UAAbiG,GACFC,EAAY,QACZhG,OAAOC,aAAagG,QAAQ,WAAY,UAExCD,EAAY,SACZhG,OAAOC,aAAagG,QAAQ,WAAY,WAW5C,OAPAC,qBAAU,WACclG,OAAOC,aAAaC,QAAQ,cAC5B6F,GACpBjG,MAED,IAGD,cAAC,IAAD,CAAiBL,MAAoB,UAAbsG,EAAuBjI,EAAaS,EAA5D,SACE,eAAC,IAAD,CACEkB,MAAoB,UAAbsG,EAAuBI,EAAgBC,EADhD,UAGE,cAAC7G,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAU8G,SAAU,cAAC,IAAD,IAApB,SACE,qBAAKC,UAAU,MAAf,SACE,cAAC,GAAD,CAAQxG,YAAaA,gB,2BC3CtByG,I,OAAe,IASbxB,OAPf,WAAgD,IAA/ByB,EAA8B,uDAAtBD,GAAclH,EAAQ,uCAGnC,OAFAA,EAAOX,KAEA8H,GCSbD,GAAe,GAEfE,GAAa,CAACC,MAEdC,GAAiB,CAAEC,OAAQC,IAC3BC,GAAgB,SAACC,GAAD,OAAmBC,2BAAgB,2BAClDL,IACAI,KCbDrC,GDgBiB,WACnB,IAlBoB+B,EAkBd/B,EAAQuC,uBAEVH,KACAP,IArBgBE,EAqBaA,GAjB1BS,mBAAe,WAAf,eAAmBT,MAoBpBM,EAAgB,GAYtB,OARArC,EAAMM,cAAgB,SAACmC,EAAKC,GACxBL,EAAcI,GAAOC,EACrB1C,EAAM2C,eACFP,GAAcC,KAKfrC,ECnCG4C,GAEdC,IAASC,OACP,cAAC,IAAD,CAAU9C,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEA+C,SAASC,eAAe,U,kNCTG/H,YAAOgI,IAAPhI,CAAH,K,mNCA5B,IAAMiI,EAAyBjI,IAAOa,IAAV,KAGtBqH,EAAyBlI,YAAOgI,IAAPhI,CAAH,KAKfmI,EAAiB,WAC5B,OACE,cAACF,EAAD,UACE,cAAC,EAAD,O,sRCXN,IAAMA,EAAyBjI,IAAOa,IAAV,KAMtBqH,EAAyBlI,YAAOgI,IAAPhI,CAAH,KAKfoI,EAAiB,WAC5B,OACE,cAAC,EAAD,UACE,cAAC,EAAD,S","file":"static/js/main.3e8a302a.chunk.js","sourcesContent":["export const lightTheme = {\n  themeName: 'light',\n  hover: '#f1f1f1',\n  highlight: '#18df16',\n  mainText: '#000000',\n  secondText: '#14213d',\n  mainBackground: ' #ffffff',\n  secondBackground: '#f1f1f1',\n  error: '#D23A39',\n};\n\nexport const darkTheme = {\n  themeName: 'dark',\n  hover: '#242526',\n  highlight: '#18df16',\n  mainText: '#ffffff',\n  secondText: '#e5e5e5',\n  mainBackground: '#18191a',\n  secondBackground: '#242526',\n  error: '#D23A39',\n};\n","import { createTheme } from '@material-ui/core/styles';\nimport {\n  lightTheme as lightWebTheme,\n  darkTheme as darkWebTheme,\n} from './webTheme';\n\nexport const lightTheme = createTheme({\n  palette: {\n    type: 'light',\n    primary: { main: lightWebTheme.highlight },\n    secondary: { main: lightWebTheme.secondText },\n    error: { main: lightWebTheme.error },\n    text: {\n      primary: lightWebTheme.mainText,\n      secondary: lightWebTheme.secondText,\n      icon: lightWebTheme.mainText,\n    },\n    divider: lightWebTheme.secondBackground,\n    background: {\n      paper: lightWebTheme.secondBackground,\n      default: lightWebTheme.mainBackground,\n    },\n    action: {\n      hover: lightWebTheme.hover,\n    },\n  },\n});\n\nexport const darkTheme = createTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: darkWebTheme.highlight },\n    secondary: { main: darkWebTheme.secondText },\n    error: { main: darkWebTheme.error },\n    text: {\n      primary: darkWebTheme.mainText,\n      secondary: darkWebTheme.secondText,\n      icon: darkWebTheme.mainText,\n    },\n    divider: darkWebTheme.secondBackground,\n    background: {\n      paper: darkWebTheme.secondBackground,\n      default: darkWebTheme.mainBackground,\n    },\n    action: {\n      hover: darkWebTheme.hover,\n    },\n  },\n});\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n* {\n  font-family: NotoSansTCRegular, QuicksandRegular, sans-serif !important;\n  margin: 0;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\nhtml,\nbody,\n#root,\n.app {\n  height: 100%;\n  margin: 0;\n}\n\nbody {\n  color: ${({ theme }) => theme.mainText};\n  background-color: ${({ theme }) => theme.mainBackground};\n}\n\na {\n  text-decoration: none;\n  color: ${({ theme }) => theme.mainText};\n\n  &:hover {\n    color: ${({ theme }) => theme.highlight};\n    cursor: pointer;\n  }\n}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Switch from '@material-ui/core/Switch';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\n\nconst StyledSwitch = styled(Switch)``;\n\nconst MuiSwitchToggleTheme = ({ toggleTheme }) => {\n  const localWebTheme = window.localStorage.getItem('webTheme');\n\n  return (\n    <>\n      <Brightness4Icon />\n      <StyledSwitch\n        checked={localWebTheme === 'light' ? true : false}\n        color=\"default\"\n        size=\"small\"\n        onChange={toggleTheme}\n      />\n      <Brightness7Icon />\n    </>\n  );\n};\n\nMuiSwitchToggleTheme.propTypes = {\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nexport default MuiSwitchToggleTheme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport MuiSwitchToggleTheme from '../components/MuiSwitchToggleTheme';\n\nconst StyledMenuContainer = styled.div`\n  min-height: 30px;\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  a {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\nconst StyledIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.mainText} !important;\n\n  &.MuiButtonBase-root.MuiIconButton-root {\n    padding: 0 !important;\n  }\n\n  :hover {\n    color: ${({ theme }) => theme.highlight} !important;\n  }\n`;\n\nconst StyledToggleThemeContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Menu = ({ toggleTheme }) => {\n  return (\n    <StyledMenuContainer>\n      <StyledIconButton\n        href=\"https://github.com/roychen3\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <GitHubIcon />\n      </StyledIconButton>\n      <StyledToggleThemeContainer>\n        <MuiSwitchToggleTheme toggleTheme={toggleTheme} />\n      </StyledToggleThemeContainer>\n    </StyledMenuContainer>\n  );\n};\n\nMenu.propTypes = {\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nexport default Menu;\n","import EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\n\nexport const menuList = [\n    {\n        hashName: 'holiday',\n        itemName: '國定假日',\n        icon: <EventAvailableIcon />,\n    },\n    {\n        hashName: 'weather',\n        itemName: '天氣預報',\n        icon: <CloudIcon />,\n    },\n    {\n        hashName: 'taipeiSpeedCameraPositions',\n        itemName: '臺北市固定測速照相地點',\n        icon: <CameraAltIcon />,\n    },\n];\n","import React, { useMemo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport { menuList } from '../constants/menuList';\nimport MuiSwitchToggleTheme from '../components/MuiSwitchToggleTheme';\n\nconst StyledListItem = styled(ListItem)`\n  .MuiListItemIcon-root .MuiSvgIcon-root {\n    color: ${({ theme }) => theme.mainText};\n  }\n  :hover {\n    .MuiListItemIcon-root .MuiSvgIcon-root {\n      color: ${({ theme }) => theme.highlight};\n    }\n  }\n`;\n\nconst ListItemLink = ({ icon, primary, to, closeMenu }) => {\n  const forwardRefLink = (itemProps, ref) => (\n    <RouterLink to={to} ref={ref} {...itemProps} />\n  );\n\n  const renderLink = useMemo(() => forwardRef(forwardRefLink), [to]);\n\n  return (\n    <li>\n      <StyledListItem button component={renderLink} onClick={closeMenu}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </StyledListItem>\n    </li>\n  );\n};\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n};\n\nconst StyledMobileMenuContainer = styled.div`\n  width: 250px;\n`;\nconst StyledMobileMenuClose = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 1rem;\n`;\nconst StyledIconButton = styled(IconButton)`\n  color: ${({ theme }) => theme.mainText} !important;\n\n  :hover {\n    color: ${({ theme }) => theme.highlight} !important;\n  }\n`;\nconst StyledDivider = styled(Divider)`\n  background-color: ${({ theme }) => theme.mainBackground} !important;\n`;\nconst StyledListItemToggleTheme = styled(ListItem)`\n  justify-content: center !important;\n`;\n\nconst MobileMenu = ({ closeMenu, toggleTheme }) => {\n  const linkList = menuList.map((item) => (\n    <ListItemLink\n      key={item.hashName}\n      to={`/${item.hashName}`}\n      primary={item.itemName}\n      icon={item.icon}\n      closeMenu={closeMenu}\n    />\n  ));\n\n  return (\n    <StyledMobileMenuContainer>\n      <StyledMobileMenuClose>\n        <StyledIconButton size=\"small\" onClick={closeMenu}>\n          <ChevronLeftIcon />\n        </StyledIconButton>\n      </StyledMobileMenuClose>\n      <StyledDivider />\n      <List>{linkList}</List>\n      <Hidden smUp>\n        <StyledDivider />\n        <List>\n          <StyledListItem\n            button\n            component=\"a\"\n            href=\"https://github.com/roychen3\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <ListItemIcon>\n              <GitHubIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Author\" />\n          </StyledListItem>\n        </List>\n        <StyledDivider />\n        <List>\n          <StyledListItemToggleTheme>\n            <MuiSwitchToggleTheme toggleTheme={toggleTheme} />\n          </StyledListItemToggleTheme>\n        </List>\n      </Hidden>\n    </StyledMobileMenuContainer>\n  );\n};\n\nMobileMenu.propTypes = {\n  closeMenu: PropTypes.func.isRequired,\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nexport default MobileMenu;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport Menu from '../components/Menu';\nimport MobileMenu from '../components/MobileMenu';\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.secondBackground};\n  position: fixed;\n  z-index: 110;\n`;\nconst StyledTitleContainer = styled.div`\n  min-height: 30px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst StyledTitle = styled.div`\n  margin: auto 0;\n  font-size: large;\n  font-weight: bolder;\n`;\nconst StyledIconButton = styled(IconButton)`\n  margin-right: 10px !important;\n  color: ${({ theme }) => theme.mainText} !important;\n\n  :hover {\n    color: ${({ theme }) => theme.highlight} !important;\n  }\n`;\nconst StyledDataUsageIcon = styled(DataUsageIcon)`\n  margin: auto 0;\n  color: ${({ theme }) => theme.highlight};\n`;\nconst StyledDrawer = styled(Drawer)`\n  .MuiPaper-root {\n    background-color: ${({ theme }) => theme.secondBackground};\n    box-shadow: inset 0px 0px 0px -100px ${({ theme }) => theme.hover},\n      13px 0px 18px 0px #00000080;\n  }\n`;\n\nconst Header = ({ toggleTheme }) => {\n  const [mobilMenuIsOpen, setMobilMenuIsOpen] = useState(false);\n  const toggleMobilMenuDrawer = (open) => {\n    setMobilMenuIsOpen(open);\n  };\n\n  return (\n    <StyledHeader>\n      <Grid container spacing={1}>\n        <Grid item xs>\n          <StyledTitleContainer>\n            <StyledIconButton\n              size=\"small\"\n              onClick={() => toggleMobilMenuDrawer(true)}\n            >\n              <MenuIcon />\n            </StyledIconButton>\n            <StyledDrawer\n              variant=\"persistent\"\n              anchor={'left'}\n              open={mobilMenuIsOpen}\n              onClose={() => toggleMobilMenuDrawer(false)}\n            >\n              <MobileMenu\n                closeMenu={() => toggleMobilMenuDrawer(false)}\n                toggleTheme={toggleTheme}\n              />\n            </StyledDrawer>\n            <StyledDataUsageIcon />\n            <StyledTitle>政府資料開放平台</StyledTitle>\n          </StyledTitleContainer>\n        </Grid>\n        <Hidden xsDown>\n          <Grid item xs>\n            <Menu toggleTheme={toggleTheme} />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </StyledHeader>\n  );\n};\n\nHeader.propTypes = {\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { lazy, useMemo } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { menuList } from '../constants/menuList';\n\nconst StyledPageContainer = styled.div`\n  width: 99%;\n  margin: 0 auto;\n  padding: 4rem 0 8rem;\n\n  @media (min-width: 960px) {\n    width: ${({ $needFullWidth }) => ($needFullWidth ? '99%' : '70%')};\n  }\n\n  .page-title {\n    font-size: xx-large;\n    font-weight: bolder;\n    margin-bottom: 2rem;\n  }\n\n  .table-container {\n    margin: 1rem 0;\n  }\n`;\n\nexport const creatRouteList = () => {\n  const store = useStore();\n\n  const Holiday = lazy(() =>\n    import('../redux/holiday/reducers').then((reducer) => {\n      store.injectReducer('holiday', reducer.default);\n      return import('../pages/holiday');\n    })\n  );\n  const Weather = lazy(() =>\n    import('../redux/weather/reducers').then((reducer) => {\n      store.injectReducer('weather', reducer.default);\n      return import('../pages/weather');\n    })\n  );\n  const TaipeiSpeedCameraPositions = lazy(() =>\n    import('../redux/taipeiSpeedCameraPositions/reducers').then((reducer) => {\n      store.injectReducer('taipeiSpeedCameraPositions', reducer.default);\n      return import('../pages/taipeiSpeedCameraPositions');\n    })\n  );\n\n  const getPageComponents = (name) => {\n    switch (name) {\n      case 'holiday':\n        return <Holiday />;\n      case 'weather':\n        return <Weather />;\n      case 'taipeiSpeedCameraPositions':\n        return <TaipeiSpeedCameraPositions />;\n\n      default:\n        return <></>;\n    }\n  };\n\n  const routeList = menuList.map((item) => (\n    <Route exact key={`${item.hashName}`} path={`/${item.hashName}`}>\n      {['taipeiSpeedCameraPositions'].includes(item.hashName) ? (\n        <StyledPageContainer $needFullWidth>\n          {getPageComponents(item.hashName)}\n        </StyledPageContainer>\n      ) : (\n        <StyledPageContainer>\n          {getPageComponents(item.hashName)}\n        </StyledPageContainer>\n      )}\n    </Route>\n  ));\n\n  return useMemo(() => routeList, []);\n};\n","import React from 'react';\n// import PropTypes from 'prop-types'\nimport { Switch, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { creatRouteList } from '../routes';\nimport { menuList } from '../constants/menuList';\n\nconst StyledContent = styled.div`\n  min-height: 100%;\n  padding-top: 62px; /* header height */\n  margin-bottom: -51px; /* footer height */\n`;\n\nconst Content = () => {\n  const routeList = creatRouteList();\n\n  return (\n    <StyledContent>\n      <Switch>\n        {routeList}\n        <Redirect from=\"/\" to={`/${menuList[0].hashName}`} />\n      </Switch>\n    </StyledContent>\n  );\n};\n\nContent.propTypes = {};\n\nexport default Content;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\nwidth: 100%;\nbackground-color: ${({ theme }) => theme.secondBackground};\ncolor: ${({ theme }) => theme.secondText};\npadding: 1rem;\nfont-size: small;\ntext-align: center;\n`;\n\nconst Footer = () => {\n    return (\n        <StyledFooter>Copyright © 2020 Roy Chen.</StyledFooter>\n    );\n};\n\nFooter.propTypes = {\n\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst index = ({ toggleTheme }) => {\n  return (\n    <>\n      <Header toggleTheme={toggleTheme} />\n      <Content />\n      <Footer />\n    </>\n  );\n};\n\nindex.propTypes = {\n  toggleTheme: PropTypes.func.isRequired,\n};\n\nexport default index;\n","import React, { useState, useEffect, Suspense } from 'react';\n// import PropTypes from 'prop-types'\nimport { HashRouter } from 'react-router-dom';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { MuiLoadingPage } from './components/muiCircularProgress';\nimport { lightTheme, darkTheme } from './styles/webTheme';\nimport {\n  lightTheme as muiLightTheme,\n  darkTheme as muiDarkTheme,\n} from './styles/muiTheme';\nimport { GlobalStyles } from './styles/globalStyles';\nimport Layout from './layout';\n\nconst App = () => {\n  const [webTheme, setWebTheme] = useState('dark');\n  const toggleTheme = () => {\n    if (webTheme === 'light') {\n      setWebTheme('dark');\n      window.localStorage.setItem('webTheme', 'dark');\n    } else {\n      setWebTheme('light');\n      window.localStorage.setItem('webTheme', 'light');\n    }\n  };\n\n  useEffect(() => {\n    const localWebTheme = window.localStorage.getItem('webTheme');\n    if (localWebTheme !== webTheme) {\n      toggleTheme();\n    }\n  }, []);\n\n  return (\n    <SCThemeProvider theme={webTheme === 'light' ? lightTheme : darkTheme}>\n      <MuiThemeProvider\n        theme={webTheme === 'light' ? muiLightTheme : muiDarkTheme}\n      >\n        <GlobalStyles />\n        <HashRouter>\n          <Suspense fallback={<MuiLoadingPage />}>\n            <div className=\"app\">\n              <Layout toggleTheme={toggleTheme} />\n            </div>\n          </Suspense>\n        </HashRouter>\n      </MuiThemeProvider>\n    </SCThemeProvider>\n  );\n};\n\nApp.propTypes = {};\n\nexport default App;\n","export const initialState = {};\n\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport initialReducers from './initialReducers';\n// import rootReducer from './reducers\n\nconst bindMiddleware = (middleware) => {\n    if (process.env.NODE_ENV !== 'production') {\n        return composeWithDevTools(applyMiddleware(...middleware));\n    }\n    return applyMiddleware(...middleware);\n};\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst staticReducers = { static: initialReducers };\nconst createReducer = (asyncReducers) => combineReducers({\n    ...staticReducers,\n    ...asyncReducers,\n});\n\nconst configureStore = () => {\n    const store = createStore(\n        // rootReducer,\n        createReducer(),\n        initialState, bindMiddleware(middleware));\n\n    // Add a dictionary to keep track of the registered async reducers\n    const asyncReducers = {};\n\n    // Create an inject reducer function\n    // This function adds the async reducer, and creates a new combined reducer\n    store.injectReducer = (key, asyncReducer) => {\n        asyncReducers[key] = asyncReducer;\n        store.replaceReducer(\n            createReducer(asyncReducers)\n        );\n    };\n\n    // Return the modified store\n    return store;\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './assets/css/style.scss';\nimport App from './App';\nimport initStore from './redux/store';\n\nconst store = initStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst StyledCircularProgress = styled(CircularProgress)``;\n\nexport const MuiCircularProgress = () => {\n  return <StyledCircularProgress />;\n};\n\nMuiCircularProgress.propTypes = {};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst StyledSpinnerContainer = styled.div`\n  padding: 15vh 0;\n`;\nconst StyledCircularProgress = styled(CircularProgress)`\n  display: block !important;\n  margin: 0 auto;\n`;\n\nexport const MuiPageSpinner = () => {\n  return (\n    <StyledSpinnerContainer>\n      <StyledCircularProgress />\n    </StyledSpinnerContainer>\n  );\n};\n\nMuiPageSpinner.propTypes = {};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst StyledSpinnerContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst StyledCircularProgress = styled(CircularProgress)`\n  display: block !important;\n  margin: 0 auto;\n`;\n\nexport const MuiLoadingPage = () => {\n  return (\n    <StyledSpinnerContainer>\n      <StyledCircularProgress />\n    </StyledSpinnerContainer>\n  );\n};\n\nMuiLoadingPage.propTypes = {};\n"],"sourceRoot":""}